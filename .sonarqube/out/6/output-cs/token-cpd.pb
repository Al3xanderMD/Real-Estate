Ç#
=D:\Real-Estate\Infrastructure\InfrastructureRegistrationDI.cs
	namespace 	
Infrastructure
 
{		 
public

 
static

 
class

 (
InfrastructureRegistrationDI

 1
{ 
public 
static 
IServiceCollection (!
AddInfrastructureToDI) >
(> ?
this	 
IServiceCollection  
services! )
,) *
IConfiguration	 
configuration %
)% &
{ 	
services 
. 
AddDbContext !
<! "
RealEstateContext" 3
>3 4
(4 5
options 
=> 
options 
. 
	UseNpgsql !
(! "
configuration !
.! "
GetConnectionString" 5
( 
$str +
)+ ,
,, -
builder 
=> 
builder 
. 
MigrationsAssembly .
(. /
typeof 
( 
RealEstateContext 0
)0 1
. 
Assembly !
.! "
FullName" *
)* +
)+ ,
), -
;- .
services 
. 
	AddScoped 
( 
typeof 
( 
IAsyncRepository (
<( )
>) *
)* +
,+ ,
typeof 
( 
BaseRepository %
<% &
>& '
)' (
)( )
;) *
services 
. 
	AddScoped 
< 
IAddressRepository 1
,1 2
AddressRepository3 D
>D E
(E F
)F G
;G H
services 
. 
	AddScoped 
<  
IApartmentRepository 3
,3 4
ApartmentRepository5 H
>H I
(I J
)J K
;K L
services 
. 
	AddScoped 
< 
IBasePostRepository 2
,2 3
BasePostRepository4 F
>F G
(G H
)H I
;I J
services 
. 
	AddScoped 
< #
IPartitioningRepository 6
,6 7"
PartitioningRepository8 N
>N O
(O P
)P Q
;Q R
services   
.   
	AddScoped   
<   
ILotRepository   -
,  - .
LotRepository  / <
>  < =
(  = >
)  > ?
;  ? @
services!! 
.!! 
	AddScoped!! 
<!! (
ILotClassificationRepository!! ;
,!!; <'
LotClassificationRepository!!= X
>!!X Y
(!!Y Z
)!!Z [
;!![ \
services"" 
."" 
	AddScoped"" 
<"" #
IHotelPensionRepository"" 6
,""6 7"
HotelPensionRepository""8 N
>""N O
(""O P
)""P Q
;""Q R
services## 
.## 
	AddScoped## 
<## 
IHouseRepository## /
,##/ 0
HouseRepository##1 @
>##@ A
(##A B
)##B C
;##C D
services$$ 
.$$ 
	AddScoped$$ 
<$$  
IHouseTypeRepository$$ 3
,$$3 4
HouseTypeRepository$$5 H
>$$H I
($$I J
)$$J K
;$$K L
services%% 
.%% 
	AddScoped%% 
<%% !
ICommercialRepository%% 4
,%%4 5 
CommercialRepository%%6 J
>%%J K
(%%K L
)%%L M
;%%M N
services&& 
.&& 
	AddScoped&& 
<&& )
ICommercialCategoryRepository&& <
,&&< =(
CommercialCategoryRepository&&> Z
>&&Z [
(&&[ \
)&&\ ]
;&&] ^
services'' 
.'' 
	AddScoped'' 
<'' )
ICommercialSpecificRepository'' <
,''< =(
CommercialSpecificRepository''> Z
>''Z [
(''[ \
)''\ ]
;''] ^
services(( 
.(( 
	AddScoped(( 
<(( 
IClientRepository(( 0
,((0 1
ClientRepository((2 B
>((B C
(((C D
)((D E
;((E F
return** 
services** 
;** 
}++ 	
},, 
}-- ¹þ
CD:\Real-Estate\Infrastructure\Migrations\20231220171151_initproj.cs
	namespace 	
Infrastructure
 
. 

Migrations #
{ 
public

 

partial

 
class

 
initproj

 !
:

" #
	Migration

$ -
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str !
,! "
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
Guid& *
>* +
(+ ,
type, 0
:0 1
$str2 8
,8 9
nullable: B
:B C
falseD I
)I J
,J K
Url 
= 
table 
.  
Column  &
<& '
string' -
>- .
(. /
type/ 3
:3 4
$str5 ;
,; <
nullable= E
:E F
falseG L
)L M
,M N
AddressName 
=  !
table" '
.' (
Column( .
<. /
string/ 5
>5 6
(6 7
type7 ;
:; <
$str= C
,C D
nullableE M
:M N
falseO T
)T U
,U V
	CreatedBy 
= 
table  %
.% &
Column& ,
<, -
string- 3
>3 4
(4 5
type5 9
:9 :
$str; A
,A B
nullableC K
:K L
trueM Q
)Q R
,R S
CreatedDate 
=  !
table" '
.' (
Column( .
<. /
DateTime/ 7
>7 8
(8 9
type9 =
:= >
$str? Y
,Y Z
nullable[ c
:c d
falsee j
)j k
,k l
LastModifiedBy "
=# $
table% *
.* +
Column+ 1
<1 2
string2 8
>8 9
(9 :
type: >
:> ?
$str@ F
,F G
nullableH P
:P Q
trueR V
)V W
,W X
LastModifiedDate $
=% &
table' ,
., -
Column- 3
<3 4
DateTime4 <
>< =
(= >
type> B
:B C
$strD ^
,^ _
nullable` h
:h i
falsej o
)o p
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 3
,3 4
x5 6
=>7 9
x: ;
.; <
Id< >
)> ?
;? @
} 
) 
; 
migrationBuilder   
.   
CreateTable   (
(  ( )
name!! 
:!! 
$str!! 
,!!  
columns"" 
:"" 
table"" 
=>"" !
new""" %
{## 
UserId$$ 
=$$ 
table$$ "
.$$" #
Column$$# )
<$$) *
Guid$$* .
>$$. /
($$/ 0
type$$0 4
:$$4 5
$str$$6 <
,$$< =
nullable$$> F
:$$F G
false$$H M
)$$M N
,$$N O
Username%% 
=%% 
table%% $
.%%$ %
Column%%% +
<%%+ ,
string%%, 2
>%%2 3
(%%3 4
type%%4 8
:%%8 9
$str%%: @
,%%@ A
nullable%%B J
:%%J K
false%%L Q
)%%Q R
,%%R S
Email&& 
=&& 
table&& !
.&&! "
Column&&" (
<&&( )
string&&) /
>&&/ 0
(&&0 1
type&&1 5
:&&5 6
$str&&7 =
,&&= >
nullable&&? G
:&&G H
false&&I N
)&&N O
,&&O P
Name'' 
='' 
table''  
.''  !
Column''! '
<''' (
string''( .
>''. /
(''/ 0
type''0 4
:''4 5
$str''6 <
,''< =
nullable''> F
:''F G
false''H M
)''M N
,''N O
PhoneNumber(( 
=((  !
table((" '
.((' (
Column((( .
<((. /
string((/ 5
>((5 6
(((6 7
type((7 ;
:((; <
$str((= C
,((C D
nullable((E M
:((M N
false((O T
)((T U
,((U V
ImageUrl)) 
=)) 
table)) $
.))$ %
Column))% +
<))+ ,
string)), 2
>))2 3
())3 4
type))4 8
:))8 9
$str)): @
,))@ A
nullable))B J
:))J K
true))L P
)))P Q
,))Q R
	CreatedBy** 
=** 
table**  %
.**% &
Column**& ,
<**, -
string**- 3
>**3 4
(**4 5
type**5 9
:**9 :
$str**; A
,**A B
nullable**C K
:**K L
true**M Q
)**Q R
,**R S
CreatedDate++ 
=++  !
table++" '
.++' (
Column++( .
<++. /
DateTime++/ 7
>++7 8
(++8 9
type++9 =
:++= >
$str++? Y
,++Y Z
nullable++[ c
:++c d
false++e j
)++j k
,++k l
LastModifiedBy,, "
=,,# $
table,,% *
.,,* +
Column,,+ 1
<,,1 2
string,,2 8
>,,8 9
(,,9 :
type,,: >
:,,> ?
$str,,@ F
,,,F G
nullable,,H P
:,,P Q
true,,R V
),,V W
,,,W X
LastModifiedDate-- $
=--% &
table--' ,
.--, -
Column--- 3
<--3 4
DateTime--4 <
>--< =
(--= >
type--> B
:--B C
$str--D ^
,--^ _
nullable--` h
:--h i
false--j o
)--o p
}.. 
,.. 
constraints// 
:// 
table// "
=>//# %
{00 
table11 
.11 

PrimaryKey11 $
(11$ %
$str11% 1
,111 2
x113 4
=>115 7
x118 9
.119 :
UserId11: @
)11@ A
;11A B
}22 
)22 
;22 
migrationBuilder44 
.44 
CreateTable44 (
(44( )
name55 
:55 
$str55 ,
,55, -
columns66 
:66 
table66 
=>66 !
new66" %
{77 
Id88 
=88 
table88 
.88 
Column88 %
<88% &
Guid88& *
>88* +
(88+ ,
type88, 0
:880 1
$str882 8
,888 9
nullable88: B
:88B C
false88D I
)88I J
,88J K
CategoryName99  
=99! "
table99# (
.99( )
Column99) /
<99/ 0
string990 6
>996 7
(997 8
type998 <
:99< =
$str99> D
,99D E
nullable99F N
:99N O
false99P U
)99U V
,99V W
	CreatedBy:: 
=:: 
table::  %
.::% &
Column::& ,
<::, -
string::- 3
>::3 4
(::4 5
type::5 9
:::9 :
$str::; A
,::A B
nullable::C K
:::K L
true::M Q
)::Q R
,::R S
CreatedDate;; 
=;;  !
table;;" '
.;;' (
Column;;( .
<;;. /
DateTime;;/ 7
>;;7 8
(;;8 9
type;;9 =
:;;= >
$str;;? Y
,;;Y Z
nullable;;[ c
:;;c d
false;;e j
);;j k
,;;k l
LastModifiedBy<< "
=<<# $
table<<% *
.<<* +
Column<<+ 1
<<<1 2
string<<2 8
><<8 9
(<<9 :
type<<: >
:<<> ?
$str<<@ F
,<<F G
nullable<<H P
:<<P Q
true<<R V
)<<V W
,<<W X
LastModifiedDate== $
===% &
table==' ,
.==, -
Column==- 3
<==3 4
DateTime==4 <
>==< =
(=== >
type==> B
:==B C
$str==D ^
,==^ _
nullable==` h
:==h i
false==j o
)==o p
}>> 
,>> 
constraints?? 
:?? 
table?? "
=>??# %
{@@ 
tableAA 
.AA 

PrimaryKeyAA $
(AA$ %
$strAA% >
,AA> ?
xAA@ A
=>AAB D
xAAE F
.AAF G
IdAAG I
)AAI J
;AAJ K
}BB 
)BB 
;BB 
migrationBuilderDD 
.DD 
CreateTableDD (
(DD( )
nameEE 
:EE 
$strEE "
,EE" #
columnsFF 
:FF 
tableFF 
=>FF !
newFF" %
{GG 
IdHH 
=HH 
tableHH 
.HH 
ColumnHH %
<HH% &
GuidHH& *
>HH* +
(HH+ ,
typeHH, 0
:HH0 1
$strHH2 8
,HH8 9
nullableHH: B
:HHB C
falseHHD I
)HHI J
,HHJ K
TypeII 
=II 
tableII  
.II  !
ColumnII! '
<II' (
stringII( .
>II. /
(II/ 0
typeII0 4
:II4 5
$strII6 <
,II< =
nullableII> F
:IIF G
falseIIH M
)IIM N
,IIN O
	CreatedByJJ 
=JJ 
tableJJ  %
.JJ% &
ColumnJJ& ,
<JJ, -
stringJJ- 3
>JJ3 4
(JJ4 5
typeJJ5 9
:JJ9 :
$strJJ; A
,JJA B
nullableJJC K
:JJK L
trueJJM Q
)JJQ R
,JJR S
CreatedDateKK 
=KK  !
tableKK" '
.KK' (
ColumnKK( .
<KK. /
DateTimeKK/ 7
>KK7 8
(KK8 9
typeKK9 =
:KK= >
$strKK? Y
,KKY Z
nullableKK[ c
:KKc d
falseKKe j
)KKj k
,KKk l
LastModifiedByLL "
=LL# $
tableLL% *
.LL* +
ColumnLL+ 1
<LL1 2
stringLL2 8
>LL8 9
(LL9 :
typeLL: >
:LL> ?
$strLL@ F
,LLF G
nullableLLH P
:LLP Q
trueLLR V
)LLV W
,LLW X
LastModifiedDateMM $
=MM% &
tableMM' ,
.MM, -
ColumnMM- 3
<MM3 4
DateTimeMM4 <
>MM< =
(MM= >
typeMM> B
:MMB C
$strMMD ^
,MM^ _
nullableMM` h
:MMh i
falseMMj o
)MMo p
}NN 
,NN 
constraintsOO 
:OO 
tableOO "
=>OO# %
{PP 
tableQQ 
.QQ 

PrimaryKeyQQ $
(QQ$ %
$strQQ% 4
,QQ4 5
xQQ6 7
=>QQ8 :
xQQ; <
.QQ< =
IdQQ= ?
)QQ? @
;QQ@ A
}RR 
)RR 
;RR 
migrationBuilderTT 
.TT 
CreateTableTT (
(TT( )
nameUU 
:UU 
$strUU *
,UU* +
columnsVV 
:VV 
tableVV 
=>VV !
newVV" %
{WW 
IdXX 
=XX 
tableXX 
.XX 
ColumnXX %
<XX% &
GuidXX& *
>XX* +
(XX+ ,
typeXX, 0
:XX0 1
$strXX2 8
,XX8 9
nullableXX: B
:XXB C
falseXXD I
)XXI J
,XXJ K
TypeYY 
=YY 
tableYY  
.YY  !
ColumnYY! '
<YY' (
stringYY( .
>YY. /
(YY/ 0
typeYY0 4
:YY4 5
$strYY6 <
,YY< =
nullableYY> F
:YYF G
falseYYH M
)YYM N
,YYN O
	CreatedByZZ 
=ZZ 
tableZZ  %
.ZZ% &
ColumnZZ& ,
<ZZ, -
stringZZ- 3
>ZZ3 4
(ZZ4 5
typeZZ5 9
:ZZ9 :
$strZZ; A
,ZZA B
nullableZZC K
:ZZK L
trueZZM Q
)ZZQ R
,ZZR S
CreatedDate[[ 
=[[  !
table[[" '
.[[' (
Column[[( .
<[[. /
DateTime[[/ 7
>[[7 8
([[8 9
type[[9 =
:[[= >
$str[[? Y
,[[Y Z
nullable[[[ c
:[[c d
false[[e j
)[[j k
,[[k l
LastModifiedBy\\ "
=\\# $
table\\% *
.\\* +
Column\\+ 1
<\\1 2
string\\2 8
>\\8 9
(\\9 :
type\\: >
:\\> ?
$str\\@ F
,\\F G
nullable\\H P
:\\P Q
true\\R V
)\\V W
,\\W X
LastModifiedDate]] $
=]]% &
table]]' ,
.]], -
Column]]- 3
<]]3 4
DateTime]]4 <
>]]< =
(]]= >
type]]> B
:]]B C
$str]]D ^
,]]^ _
nullable]]` h
:]]h i
false]]j o
)]]o p
}^^ 
,^^ 
constraints__ 
:__ 
table__ "
=>__# %
{`` 
tableaa 
.aa 

PrimaryKeyaa $
(aa$ %
$straa% <
,aa< =
xaa> ?
=>aa@ B
xaaC D
.aaD E
IdaaE G
)aaG H
;aaH I
}bb 
)bb 
;bb 
migrationBuilderdd 
.dd 
CreateTabledd (
(dd( )
nameee 
:ee 
$stree %
,ee% &
columnsff 
:ff 
tableff 
=>ff !
newff" %
{gg 
Idhh 
=hh 
tablehh 
.hh 
Columnhh %
<hh% &
Guidhh& *
>hh* +
(hh+ ,
typehh, 0
:hh0 1
$strhh2 8
,hh8 9
nullablehh: B
:hhB C
falsehhD I
)hhI J
,hhJ K
Typeii 
=ii 
tableii  
.ii  !
Columnii! '
<ii' (
stringii( .
>ii. /
(ii/ 0
typeii0 4
:ii4 5
$strii6 <
,ii< =
nullableii> F
:iiF G
falseiiH M
)iiM N
,iiN O
	CreatedByjj 
=jj 
tablejj  %
.jj% &
Columnjj& ,
<jj, -
stringjj- 3
>jj3 4
(jj4 5
typejj5 9
:jj9 :
$strjj; A
,jjA B
nullablejjC K
:jjK L
truejjM Q
)jjQ R
,jjR S
CreatedDatekk 
=kk  !
tablekk" '
.kk' (
Columnkk( .
<kk. /
DateTimekk/ 7
>kk7 8
(kk8 9
typekk9 =
:kk= >
$strkk? Y
,kkY Z
nullablekk[ c
:kkc d
falsekke j
)kkj k
,kkk l
LastModifiedByll "
=ll# $
tablell% *
.ll* +
Columnll+ 1
<ll1 2
stringll2 8
>ll8 9
(ll9 :
typell: >
:ll> ?
$strll@ F
,llF G
nullablellH P
:llP Q
truellR V
)llV W
,llW X
LastModifiedDatemm $
=mm% &
tablemm' ,
.mm, -
Columnmm- 3
<mm3 4
DateTimemm4 <
>mm< =
(mm= >
typemm> B
:mmB C
$strmmD ^
,mm^ _
nullablemm` h
:mmh i
falsemmj o
)mmo p
}nn 
,nn 
constraintsoo 
:oo 
tableoo "
=>oo# %
{pp 
tableqq 
.qq 

PrimaryKeyqq $
(qq$ %
$strqq% 7
,qq7 8
xqq9 :
=>qq; =
xqq> ?
.qq? @
Idqq@ B
)qqB C
;qqC D
}rr 
)rr 
;rr 
migrationBuildertt 
.tt 
CreateTablett (
(tt( )
nameuu 
:uu 
$struu !
,uu! "
columnsvv 
:vv 
tablevv 
=>vv !
newvv" %
{ww 

BasePostIdxx 
=xx  
tablexx! &
.xx& '
Columnxx' -
<xx- .
Guidxx. 2
>xx2 3
(xx3 4
typexx4 8
:xx8 9
$strxx: @
,xx@ A
nullablexxB J
:xxJ K
falsexxL Q
)xxQ R
,xxR S
UserIdyy 
=yy 
tableyy "
.yy" #
Columnyy# )
<yy) *
stringyy* 0
>yy0 1
(yy1 2
typeyy2 6
:yy6 7
$stryy8 >
,yy> ?
nullableyy@ H
:yyH I
falseyyJ O
)yyO P
,yyP Q
	TitlePostzz 
=zz 
tablezz  %
.zz% &
Columnzz& ,
<zz, -
stringzz- 3
>zz3 4
(zz4 5
typezz5 9
:zz9 :
$strzz; A
,zzA B
nullablezzC K
:zzK L
falsezzM R
)zzR S
,zzS T
Images{{ 
={{ 
table{{ "
.{{" #
Column{{# )
<{{) *
List{{* .
<{{. /
string{{/ 5
>{{5 6
>{{6 7
({{7 8
type{{8 <
:{{< =
$str{{> F
,{{F G
nullable{{H P
:{{P Q
false{{R W
){{W X
,{{X Y
	OfferType|| 
=|| 
table||  %
.||% &
Column||& ,
<||, -
bool||- 1
>||1 2
(||2 3
type||3 7
:||7 8
$str||9 B
,||B C
nullable||D L
:||L M
false||N S
)||S T
,||T U
Price}} 
=}} 
table}} !
.}}! "
Column}}" (
<}}( )
double}}) /
>}}/ 0
(}}0 1
type}}1 5
:}}5 6
$str}}7 I
,}}I J
nullable}}K S
:}}S T
false}}U Z
)}}Z [
,}}[ \
	AddressId~~ 
=~~ 
table~~  %
.~~% &
Column~~& ,
<~~, -
Guid~~- 1
>~~1 2
(~~2 3
type~~3 7
:~~7 8
$str~~9 ?
,~~? @
nullable~~A I
:~~I J
false~~K P
)~~P Q
,~~Q R
Description 
=  !
table" '
.' (
Column( .
<. /
string/ 5
>5 6
(6 7
type7 ;
:; <
$str= C
,C D
nullableE M
:M N
falseO T
)T U
,U V
	CreatedBy
 
=
 
table
  %
.
% &
Column
& ,
<
, -
string
- 3
>
3 4
(
4 5
type
5 9
:
9 :
$str
; A
,
A B
nullable
C K
:
K L
true
M Q
)
Q R
,
R S
CreatedDate
 
=
  !
table
" '
.
' (
Column
( .
<
. /
DateTime
/ 7
>
7 8
(
8 9
type
9 =
:
= >
$str
? Y
,
Y Z
nullable
[ c
:
c d
false
e j
)
j k
,
k l
LastModifiedBy
 "
=
# $
table
% *
.
* +
Column
+ 1
<
1 2
string
2 8
>
8 9
(
9 :
type
: >
:
> ?
$str
@ F
,
F G
nullable
H P
:
P Q
true
R V
)
V W
,
W X
LastModifiedDate
 $
=
% &
table
' ,
.
, -
Column
- 3
<
3 4
DateTime
4 <
>
< =
(
= >
type
> B
:
B C
$str
D ^
,
^ _
nullable
` h
:
h i
false
j o
)
o p
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% 3
,
3 4
x
5 6
=>
7 9
x
: ;
.
; <

BasePostId
< F
)
F G
;
G H
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 @
,
@ A
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
	AddressId
' 0
,
0 1
principalTable
 &
:
& '
$str
( 3
,
3 4
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Cascade
4 ;
)
; <
;
< =
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
 
:
 
$str
 +
,
+ ,
columns
 
:
 
table
 
=>
 !
new
" %
{
 "
CommercialSpecificId
 (
=
) *
table
+ 0
.
0 1
Column
1 7
<
7 8
Guid
8 <
>
< =
(
= >
type
> B
:
B C
$str
D J
,
J K
nullable
L T
:
T U
false
V [
)
[ \
,
\ ]
SpecificName
  
=
! "
table
# (
.
( )
Column
) /
<
/ 0
string
0 6
>
6 7
(
7 8
type
8 <
:
< =
$str
> D
,
D E
nullable
F N
:
N O
false
P U
)
U V
,
V W"
CommercialCategoryId
 (
=
) *
table
+ 0
.
0 1
Column
1 7
<
7 8
Guid
8 <
>
< =
(
= >
type
> B
:
B C
$str
D J
,
J K
nullable
L T
:
T U
false
V [
)
[ \
,
\ ]
	CreatedBy
 
=
 
table
  %
.
% &
Column
& ,
<
, -
string
- 3
>
3 4
(
4 5
type
5 9
:
9 :
$str
; A
,
A B
nullable
C K
:
K L
true
M Q
)
Q R
,
R S
CreatedDate
 
=
  !
table
" '
.
' (
Column
( .
<
. /
DateTime
/ 7
>
7 8
(
8 9
type
9 =
:
= >
$str
? Y
,
Y Z
nullable
[ c
:
c d
false
e j
)
j k
,
k l
LastModifiedBy
 "
=
# $
table
% *
.
* +
Column
+ 1
<
1 2
string
2 8
>
8 9
(
9 :
type
: >
:
> ?
$str
@ F
,
F G
nullable
H P
:
P Q
true
R V
)
V W
,
W X
LastModifiedDate
 $
=
% &
table
' ,
.
, -
Column
- 3
<
3 4
DateTime
4 <
>
< =
(
= >
type
> B
:
B C
$str
D ^
,
^ _
nullable
` h
:
h i
false
j o
)
o p
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% =
,
= >
x
? @
=>
A C
x
D E
.
E F"
CommercialSpecificId
F Z
)
Z [
;
[ \
table
 
.
 

ForeignKey
 $
(
$ %
name
   
:
   
$str
   _
,
  _ `
column
¡¡ 
:
¡¡ 
x
¡¡  !
=>
¡¡" $
x
¡¡% &
.
¡¡& '"
CommercialCategoryId
¡¡' ;
,
¡¡; <
principalTable
¢¢ &
:
¢¢& '
$str
¢¢( >
,
¢¢> ?
principalColumn
££ '
:
££' (
$str
££) -
,
££- .
onDelete
¤¤  
:
¤¤  !
ReferentialAction
¤¤" 3
.
¤¤3 4
Cascade
¤¤4 ;
)
¤¤; <
;
¤¤< =
}
¥¥ 
)
¥¥ 
;
¥¥ 
migrationBuilder
§§ 
.
§§ 
CreateTable
§§ (
(
§§( )
name
¨¨ 
:
¨¨ 
$str
¨¨ "
,
¨¨" #
columns
©© 
:
©© 
table
©© 
=>
©© !
new
©©" %
{
ªª 

BasePostId
«« 
=
««  
table
««! &
.
««& '
Column
««' -
<
««- .
Guid
««. 2
>
««2 3
(
««3 4
type
««4 8
:
««8 9
$str
««: @
,
««@ A
nullable
««B J
:
««J K
false
««L Q
)
««Q R
,
««R S
	RoomCount
¬¬ 
=
¬¬ 
table
¬¬  %
.
¬¬% &
Column
¬¬& ,
<
¬¬, -
int
¬¬- 0
>
¬¬0 1
(
¬¬1 2
type
¬¬2 6
:
¬¬6 7
$str
¬¬8 A
,
¬¬A B
nullable
¬¬C K
:
¬¬K L
false
¬¬M R
)
¬¬R S
,
¬¬S T
PartitioningId
­­ "
=
­­# $
table
­­% *
.
­­* +
Column
­­+ 1
<
­­1 2
Guid
­­2 6
>
­­6 7
(
­­7 8
type
­­8 <
:
­­< =
$str
­­> D
,
­­D E
nullable
­­F N
:
­­N O
false
­­P U
)
­­U V
,
­­V W
Comfort
®® 
=
®® 
table
®® #
.
®®# $
Column
®®$ *
<
®®* +
int
®®+ .
>
®®. /
(
®®/ 0
type
®®0 4
:
®®4 5
$str
®®6 ?
,
®®? @
nullable
®®A I
:
®®I J
false
®®K P
)
®®P Q
,
®®Q R
Floor
¯¯ 
=
¯¯ 
table
¯¯ !
.
¯¯! "
Column
¯¯" (
<
¯¯( )
int
¯¯) ,
>
¯¯, -
(
¯¯- .
type
¯¯. 2
:
¯¯2 3
$str
¯¯4 =
,
¯¯= >
nullable
¯¯? G
:
¯¯G H
false
¯¯I N
)
¯¯N O
,
¯¯O P
UsefulSurface
°° !
=
°°" #
table
°°$ )
.
°°) *
Column
°°* 0
<
°°0 1
double
°°1 7
>
°°7 8
(
°°8 9
type
°°9 =
:
°°= >
$str
°°? Q
,
°°Q R
nullable
°°S [
:
°°[ \
false
°°] b
)
°°b c
,
°°c d
	BuildYear
±± 
=
±± 
table
±±  %
.
±±% &
Column
±±& ,
<
±±, -
int
±±- 0
>
±±0 1
(
±±1 2
type
±±2 6
:
±±6 7
$str
±±8 A
,
±±A B
nullable
±±C K
:
±±K L
false
±±M R
)
±±R S
}
²² 
,
²² 
constraints
³³ 
:
³³ 
table
³³ "
=>
³³# %
{
´´ 
table
µµ 
.
µµ 

PrimaryKey
µµ $
(
µµ$ %
$str
µµ% 4
,
µµ4 5
x
µµ6 7
=>
µµ8 :
x
µµ; <
.
µµ< =

BasePostId
µµ= G
)
µµG H
;
µµH I
table
¶¶ 
.
¶¶ 

ForeignKey
¶¶ $
(
¶¶$ %
name
·· 
:
·· 
$str
·· B
,
··B C
column
¸¸ 
:
¸¸ 
x
¸¸  !
=>
¸¸" $
x
¸¸% &
.
¸¸& '

BasePostId
¸¸' 1
,
¸¸1 2
principalTable
¹¹ &
:
¹¹& '
$str
¹¹( 3
,
¹¹3 4
principalColumn
ºº '
:
ºº' (
$str
ºº) 5
,
ºº5 6
onDelete
»»  
:
»»  !
ReferentialAction
»»" 3
.
»»3 4
Cascade
»»4 ;
)
»»; <
;
»»< =
table
¼¼ 
.
¼¼ 

ForeignKey
¼¼ $
(
¼¼$ %
name
½½ 
:
½½ 
$str
½½ J
,
½½J K
column
¾¾ 
:
¾¾ 
x
¾¾  !
=>
¾¾" $
x
¾¾% &
.
¾¾& '
PartitioningId
¾¾' 5
,
¾¾5 6
principalTable
¿¿ &
:
¿¿& '
$str
¿¿( 7
,
¿¿7 8
principalColumn
ÀÀ '
:
ÀÀ' (
$str
ÀÀ) -
,
ÀÀ- .
onDelete
ÁÁ  
:
ÁÁ  !
ReferentialAction
ÁÁ" 3
.
ÁÁ3 4
Cascade
ÁÁ4 ;
)
ÁÁ; <
;
ÁÁ< =
}
ÂÂ 
)
ÂÂ 
;
ÂÂ 
migrationBuilder
ÄÄ 
.
ÄÄ 
CreateTable
ÄÄ (
(
ÄÄ( )
name
ÅÅ 
:
ÅÅ 
$str
ÅÅ %
,
ÅÅ% &
columns
ÆÆ 
:
ÆÆ 
table
ÆÆ 
=>
ÆÆ !
new
ÆÆ" %
{
ÇÇ 

BasePostId
ÈÈ 
=
ÈÈ  
table
ÈÈ! &
.
ÈÈ& '
Column
ÈÈ' -
<
ÈÈ- .
Guid
ÈÈ. 2
>
ÈÈ2 3
(
ÈÈ3 4
type
ÈÈ4 8
:
ÈÈ8 9
$str
ÈÈ: @
,
ÈÈ@ A
nullable
ÈÈB J
:
ÈÈJ K
false
ÈÈL Q
)
ÈÈQ R
,
ÈÈR S
UsefulSurface
ÉÉ !
=
ÉÉ" #
table
ÉÉ$ )
.
ÉÉ) *
Column
ÉÉ* 0
<
ÉÉ0 1
double
ÉÉ1 7
>
ÉÉ7 8
(
ÉÉ8 9
type
ÉÉ9 =
:
ÉÉ= >
$str
ÉÉ? Q
,
ÉÉQ R
nullable
ÉÉS [
:
ÉÉ[ \
false
ÉÉ] b
)
ÉÉb c
,
ÉÉc d
RoomSurface
ÊÊ 
=
ÊÊ  !
table
ÊÊ" '
.
ÊÊ' (
Column
ÊÊ( .
<
ÊÊ. /
double
ÊÊ/ 5
>
ÊÊ5 6
(
ÊÊ6 7
type
ÊÊ7 ;
:
ÊÊ; <
$str
ÊÊ= O
,
ÊÊO P
nullable
ÊÊQ Y
:
ÊÊY Z
false
ÊÊ[ `
)
ÊÊ` a
,
ÊÊa b
	RoomCount
ËË 
=
ËË 
table
ËË  %
.
ËË% &
Column
ËË& ,
<
ËË, -
int
ËË- 0
>
ËË0 1
(
ËË1 2
type
ËË2 6
:
ËË6 7
$str
ËË8 A
,
ËËA B
nullable
ËËC K
:
ËËK L
false
ËËM R
)
ËËR S
}
ÌÌ 
,
ÌÌ 
constraints
ÍÍ 
:
ÍÍ 
table
ÍÍ "
=>
ÍÍ# %
{
ÎÎ 
table
ÏÏ 
.
ÏÏ 

PrimaryKey
ÏÏ $
(
ÏÏ$ %
$str
ÏÏ% 7
,
ÏÏ7 8
x
ÏÏ9 :
=>
ÏÏ; =
x
ÏÏ> ?
.
ÏÏ? @

BasePostId
ÏÏ@ J
)
ÏÏJ K
;
ÏÏK L
table
ÐÐ 
.
ÐÐ 

ForeignKey
ÐÐ $
(
ÐÐ$ %
name
ÑÑ 
:
ÑÑ 
$str
ÑÑ E
,
ÑÑE F
column
ÒÒ 
:
ÒÒ 
x
ÒÒ  !
=>
ÒÒ" $
x
ÒÒ% &
.
ÒÒ& '

BasePostId
ÒÒ' 1
,
ÒÒ1 2
principalTable
ÓÓ &
:
ÓÓ& '
$str
ÓÓ( 3
,
ÓÓ3 4
principalColumn
ÔÔ '
:
ÔÔ' (
$str
ÔÔ) 5
,
ÔÔ5 6
onDelete
ÕÕ  
:
ÕÕ  !
ReferentialAction
ÕÕ" 3
.
ÕÕ3 4
Cascade
ÕÕ4 ;
)
ÕÕ; <
;
ÕÕ< =
}
ÖÖ 
)
ÖÖ 
;
ÖÖ 
migrationBuilder
ØØ 
.
ØØ 
CreateTable
ØØ (
(
ØØ( )
name
ÙÙ 
:
ÙÙ 
$str
ÙÙ 
,
ÙÙ 
columns
ÚÚ 
:
ÚÚ 
table
ÚÚ 
=>
ÚÚ !
new
ÚÚ" %
{
ÛÛ 

BasePostId
ÜÜ 
=
ÜÜ  
table
ÜÜ! &
.
ÜÜ& '
Column
ÜÜ' -
<
ÜÜ- .
Guid
ÜÜ. 2
>
ÜÜ2 3
(
ÜÜ3 4
type
ÜÜ4 8
:
ÜÜ8 9
$str
ÜÜ: @
,
ÜÜ@ A
nullable
ÜÜB J
:
ÜÜJ K
false
ÜÜL Q
)
ÜÜQ R
,
ÜÜR S
	RoomCount
ÝÝ 
=
ÝÝ 
table
ÝÝ  %
.
ÝÝ% &
Column
ÝÝ& ,
<
ÝÝ, -
int
ÝÝ- 0
>
ÝÝ0 1
(
ÝÝ1 2
type
ÝÝ2 6
:
ÝÝ6 7
$str
ÝÝ8 A
,
ÝÝA B
nullable
ÝÝC K
:
ÝÝK L
false
ÝÝM R
)
ÝÝR S
,
ÝÝS T
HouseTypeId
ÞÞ 
=
ÞÞ  !
table
ÞÞ" '
.
ÞÞ' (
Column
ÞÞ( .
<
ÞÞ. /
Guid
ÞÞ/ 3
>
ÞÞ3 4
(
ÞÞ4 5
type
ÞÞ5 9
:
ÞÞ9 :
$str
ÞÞ; A
,
ÞÞA B
nullable
ÞÞC K
:
ÞÞK L
false
ÞÞM R
)
ÞÞR S
,
ÞÞS T
Comfort
ßß 
=
ßß 
table
ßß #
.
ßß# $
Column
ßß$ *
<
ßß* +
int
ßß+ .
>
ßß. /
(
ßß/ 0
type
ßß0 4
:
ßß4 5
$str
ßß6 ?
,
ßß? @
nullable
ßßA I
:
ßßI J
false
ßßK P
)
ßßP Q
,
ßßQ R

FloorCount
àà 
=
àà  
table
àà! &
.
àà& '
Column
àà' -
<
àà- .
int
àà. 1
>
àà1 2
(
àà2 3
type
àà3 7
:
àà7 8
$str
àà9 B
,
ààB C
nullable
ààD L
:
ààL M
false
ààN S
)
ààS T
,
ààT U
UsefulSurface
áá !
=
áá" #
table
áá$ )
.
áá) *
Column
áá* 0
<
áá0 1
double
áá1 7
>
áá7 8
(
áá8 9
type
áá9 =
:
áá= >
$str
áá? Q
,
ááQ R
nullable
ááS [
:
áá[ \
false
áá] b
)
ááb c
,
áác d
LotArea
ââ 
=
ââ 
table
ââ #
.
ââ# $
Column
ââ$ *
<
ââ* +
double
ââ+ 1
>
ââ1 2
(
ââ2 3
type
ââ3 7
:
ââ7 8
$str
ââ9 K
,
ââK L
nullable
ââM U
:
ââU V
false
ââW \
)
ââ\ ]
,
ââ] ^
	BuildYear
ãã 
=
ãã 
table
ãã  %
.
ãã% &
Column
ãã& ,
<
ãã, -
int
ãã- 0
>
ãã0 1
(
ãã1 2
type
ãã2 6
:
ãã6 7
$str
ãã8 A
,
ããA B
nullable
ããC K
:
ããK L
false
ããM R
)
ããR S
}
ää 
,
ää 
constraints
åå 
:
åå 
table
åå "
=>
åå# %
{
ææ 
table
çç 
.
çç 

PrimaryKey
çç $
(
çç$ %
$str
çç% 0
,
çç0 1
x
çç2 3
=>
çç4 6
x
çç7 8
.
çç8 9

BasePostId
çç9 C
)
ççC D
;
ççD E
table
èè 
.
èè 

ForeignKey
èè $
(
èè$ %
name
éé 
:
éé 
$str
éé >
,
éé> ?
column
êê 
:
êê 
x
êê  !
=>
êê" $
x
êê% &
.
êê& '

BasePostId
êê' 1
,
êê1 2
principalTable
ëë &
:
ëë& '
$str
ëë( 3
,
ëë3 4
principalColumn
ìì '
:
ìì' (
$str
ìì) 5
,
ìì5 6
onDelete
íí  
:
íí  !
ReferentialAction
íí" 3
.
íí3 4
Cascade
íí4 ;
)
íí; <
;
íí< =
table
îî 
.
îî 

ForeignKey
îî $
(
îî$ %
name
ïï 
:
ïï 
$str
ïï @
,
ïï@ A
column
ðð 
:
ðð 
x
ðð  !
=>
ðð" $
x
ðð% &
.
ðð& '
HouseTypeId
ðð' 2
,
ðð2 3
principalTable
ññ &
:
ññ& '
$str
ññ( 4
,
ññ4 5
principalColumn
òò '
:
òò' (
$str
òò) -
,
òò- .
onDelete
óó  
:
óó  !
ReferentialAction
óó" 3
.
óó3 4
Cascade
óó4 ;
)
óó; <
;
óó< =
}
ôô 
)
ôô 
;
ôô 
migrationBuilder
öö 
.
öö 
CreateTable
öö (
(
öö( )
name
÷÷ 
:
÷÷ 
$str
÷÷ 
,
÷÷ 
columns
øø 
:
øø 
table
øø 
=>
øø !
new
øø" %
{
ùù 

BasePostId
úú 
=
úú  
table
úú! &
.
úú& '
Column
úú' -
<
úú- .
Guid
úú. 2
>
úú2 3
(
úú3 4
type
úú4 8
:
úú8 9
$str
úú: @
,
úú@ A
nullable
úúB J
:
úúJ K
false
úúL Q
)
úúQ R
,
úúR S!
LotClassificationId
ûû '
=
ûû( )
table
ûû* /
.
ûû/ 0
Column
ûû0 6
<
ûû6 7
Guid
ûû7 ;
>
ûû; <
(
ûû< =
type
ûû= A
:
ûûA B
$str
ûûC I
,
ûûI J
nullable
ûûK S
:
ûûS T
false
ûûU Z
)
ûûZ [
,
ûû[ \
LotArea
üü 
=
üü 
table
üü #
.
üü# $
Column
üü$ *
<
üü* +
double
üü+ 1
>
üü1 2
(
üü2 3
type
üü3 7
:
üü7 8
$str
üü9 K
,
üüK L
nullable
üüM U
:
üüU V
false
üüW \
)
üü\ ]
,
üü] ^
StreetFrontage
ýý "
=
ýý# $
table
ýý% *
.
ýý* +
Column
ýý+ 1
<
ýý1 2
double
ýý2 8
>
ýý8 9
(
ýý9 :
type
ýý: >
:
ýý> ?
$str
ýý@ R
,
ýýR S
nullable
ýýT \
:
ýý\ ]
false
ýý^ c
)
ýýc d
}
þþ 
,
þþ 
constraints
ÿÿ 
:
ÿÿ 
table
ÿÿ "
=>
ÿÿ# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% .
,
. /
x
0 1
=>
2 4
x
5 6
.
6 7

BasePostId
7 A
)
A B
;
B C
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 <
,
< =
column
 
:
 
x
  !
=>
" $
x
% &
.
& '

BasePostId
' 1
,
1 2
principalTable
 &
:
& '
$str
( 3
,
3 4
principalColumn
 '
:
' (
$str
) 5
,
5 6
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Cascade
4 ;
)
; <
;
< =
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 N
,
N O
column
 
:
 
x
  !
=>
" $
x
% &
.
& '!
LotClassificationId
' :
,
: ;
principalTable
 &
:
& '
$str
( <
,
< =
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Cascade
4 ;
)
; <
;
< =
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
 
:
 
$str
 #
,
# $
columns
 
:
 
table
 
=>
 !
new
" %
{
 

BasePostId
 
=
  
table
! &
.
& '
Column
' -
<
- .
Guid
. 2
>
2 3
(
3 4
type
4 8
:
8 9
$str
: @
,
@ A
nullable
B J
:
J K
false
L Q
)
Q R
,
R S"
CommercialSpecificId
 (
=
) *
table
+ 0
.
0 1
Column
1 7
<
7 8
Guid
8 <
>
< =
(
= >
type
> B
:
B C
$str
D J
,
J K
nullable
L T
:
T U
false
V [
)
[ \
,
\ ]
UsefulSurface
 !
=
" #
table
$ )
.
) *
Column
* 0
<
0 1
double
1 7
>
7 8
(
8 9
type
9 =
:
= >
$str
? Q
,
Q R
nullable
S [
:
[ \
false
] b
)
b c
,
c d
Disponibility
 !
=
" #
table
$ )
.
) *
Column
* 0
<
0 1
DateTime
1 9
>
9 :
(
: ;
type
; ?
:
? @
$str
A [
,
[ \
nullable
] e
:
e f
false
g l
)
l m
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% 5
,
5 6
x
7 8
=>
9 ;
x
< =
.
= >

BasePostId
> H
)
H I
;
I J
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 C
,
C D
column
 
:
 
x
  !
=>
" $
x
% &
.
& '

BasePostId
' 1
,
1 2
principalTable
 &
:
& '
$str
( 3
,
3 4
principalColumn
   '
:
  ' (
$str
  ) 5
,
  5 6
onDelete
¡¡  
:
¡¡  !
ReferentialAction
¡¡" 3
.
¡¡3 4
Cascade
¡¡4 ;
)
¡¡; <
;
¡¡< =
table
¢¢ 
.
¢¢ 

ForeignKey
¢¢ $
(
¢¢$ %
name
££ 
:
££ 
$str
££ W
,
££W X
column
¤¤ 
:
¤¤ 
x
¤¤  !
=>
¤¤" $
x
¤¤% &
.
¤¤& '"
CommercialSpecificId
¤¤' ;
,
¤¤; <
principalTable
¥¥ &
:
¥¥& '
$str
¥¥( =
,
¥¥= >
principalColumn
¦¦ '
:
¦¦' (
$str
¦¦) ?
,
¦¦? @
onDelete
§§  
:
§§  !
ReferentialAction
§§" 3
.
§§3 4
Cascade
§§4 ;
)
§§; <
;
§§< =
}
¨¨ 
)
¨¨ 
;
¨¨ 
migrationBuilder
ªª 
.
ªª 
CreateIndex
ªª (
(
ªª( )
name
«« 
:
«« 
$str
«« 4
,
««4 5
table
¬¬ 
:
¬¬ 
$str
¬¬ #
,
¬¬# $
column
­­ 
:
­­ 
$str
­­ (
)
­­( )
;
­­) *
migrationBuilder
¯¯ 
.
¯¯ 
CreateIndex
¯¯ (
(
¯¯( )
name
°° 
:
°° 
$str
°° .
,
°°. /
table
±± 
:
±± 
$str
±± "
,
±±" #
column
²² 
:
²² 
$str
²² #
)
²²# $
;
²²$ %
migrationBuilder
´´ 
.
´´ 
CreateIndex
´´ (
(
´´( )
name
µµ 
:
µµ 
$str
µµ ;
,
µµ; <
table
¶¶ 
:
¶¶ 
$str
¶¶ $
,
¶¶$ %
column
·· 
:
·· 
$str
·· .
)
··. /
;
··/ 0
migrationBuilder
¹¹ 
.
¹¹ 
CreateIndex
¹¹ (
(
¹¹( )
name
ºº 
:
ºº 
$str
ºº C
,
ººC D
table
»» 
:
»» 
$str
»» ,
,
»», -
column
¼¼ 
:
¼¼ 
$str
¼¼ .
)
¼¼. /
;
¼¼/ 0
migrationBuilder
¾¾ 
.
¾¾ 
CreateIndex
¾¾ (
(
¾¾( )
name
¿¿ 
:
¿¿ 
$str
¿¿ -
,
¿¿- .
table
ÀÀ 
:
ÀÀ 
$str
ÀÀ 
,
ÀÀ  
column
ÁÁ 
:
ÁÁ 
$str
ÁÁ %
)
ÁÁ% &
;
ÁÁ& '
migrationBuilder
ÃÃ 
.
ÃÃ 
CreateIndex
ÃÃ (
(
ÃÃ( )
name
ÄÄ 
:
ÄÄ 
$str
ÄÄ 3
,
ÄÄ3 4
table
ÅÅ 
:
ÅÅ 
$str
ÅÅ 
,
ÅÅ 
column
ÆÆ 
:
ÆÆ 
$str
ÆÆ -
)
ÆÆ- .
;
ÆÆ. /
}
ÇÇ 	
	protected
ÊÊ 
override
ÊÊ 
void
ÊÊ 
Down
ÊÊ  $
(
ÊÊ$ %
MigrationBuilder
ÊÊ% 5
migrationBuilder
ÊÊ6 F
)
ÊÊF G
{
ËË 	
migrationBuilder
ÌÌ 
.
ÌÌ 
	DropTable
ÌÌ &
(
ÌÌ& '
name
ÍÍ 
:
ÍÍ 
$str
ÍÍ "
)
ÍÍ" #
;
ÍÍ# $
migrationBuilder
ÏÏ 
.
ÏÏ 
	DropTable
ÏÏ &
(
ÏÏ& '
name
ÐÐ 
:
ÐÐ 
$str
ÐÐ 
)
ÐÐ  
;
ÐÐ  !
migrationBuilder
ÒÒ 
.
ÒÒ 
	DropTable
ÒÒ &
(
ÒÒ& '
name
ÓÓ 
:
ÓÓ 
$str
ÓÓ #
)
ÓÓ# $
;
ÓÓ$ %
migrationBuilder
ÕÕ 
.
ÕÕ 
	DropTable
ÕÕ &
(
ÕÕ& '
name
ÖÖ 
:
ÖÖ 
$str
ÖÖ %
)
ÖÖ% &
;
ÖÖ& '
migrationBuilder
ØØ 
.
ØØ 
	DropTable
ØØ &
(
ØØ& '
name
ÙÙ 
:
ÙÙ 
$str
ÙÙ 
)
ÙÙ 
;
ÙÙ  
migrationBuilder
ÛÛ 
.
ÛÛ 
	DropTable
ÛÛ &
(
ÛÛ& '
name
ÜÜ 
:
ÜÜ 
$str
ÜÜ 
)
ÜÜ 
;
ÜÜ 
migrationBuilder
ÞÞ 
.
ÞÞ 
	DropTable
ÞÞ &
(
ÞÞ& '
name
ßß 
:
ßß 
$str
ßß %
)
ßß% &
;
ßß& '
migrationBuilder
áá 
.
áá 
	DropTable
áá &
(
áá& '
name
ââ 
:
ââ 
$str
ââ +
)
ââ+ ,
;
ââ, -
migrationBuilder
ää 
.
ää 
	DropTable
ää &
(
ää& '
name
åå 
:
åå 
$str
åå "
)
åå" #
;
åå# $
migrationBuilder
çç 
.
çç 
	DropTable
çç &
(
çç& '
name
èè 
:
èè 
$str
èè !
)
èè! "
;
èè" #
migrationBuilder
êê 
.
êê 
	DropTable
êê &
(
êê& '
name
ëë 
:
ëë 
$str
ëë *
)
ëë* +
;
ëë+ ,
migrationBuilder
íí 
.
íí 
	DropTable
íí &
(
íí& '
name
îî 
:
îî 
$str
îî ,
)
îî, -
;
îî- .
migrationBuilder
ðð 
.
ðð 
	DropTable
ðð &
(
ðð& '
name
ññ 
:
ññ 
$str
ññ !
)
ññ! "
;
ññ" #
}
òò 	
}
óó 
}ôô Æ3
2D:\Real-Estate\Infrastructure\RealEstateContext.cs
	namespace 	
Infrastructure
 
{ 
public 

class 
RealEstateContext "
:# $
	DbContext% .
{		 
private

 	
readonly


 
ICurrentUserService

 &
currentUserService

' 9
;

9 :
public 
RealEstateContext  
(  !
DbContextOptions 
< 
RealEstateContext .
>. /
options0 7
,7 8
ICurrentUserService9 L
currentUserServiceM _
)_ `
:a b
base 
( 
options 
) 
{ 	
this 
. 
currentUserService #
=$ %
currentUserService& 8
;8 9
} 	
public 
DbSet 
< 
Address 
> 
	Addresses '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
DbSet 
< 
	Apartment 
> 

Apartments  *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
DbSet 
< 
BasePost 
> 
	BasePosts (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
DbSet 
< 
Partitioning !
>! "
Partitionings# 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
public 
DbSet 
< 
HotelPension !
>! "
HotelPensions# 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
public 
DbSet 
< 
House 
> 
Houses "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
DbSet 
< 
	HouseType 
> 

HouseTypes  *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
DbSet 
< 
Lot 
> 
Lots 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DbSet 
< 
LotClassification &
>& '
LotClassifications( :
{; <
get= @
;@ A
setB E
;E F
}G H
public 
DbSet 
< 

Commercial 
>  
Commercials! ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public 
DbSet 
< 
CommercialCategory '
>' ( 
CommercialCategories) =
{> ?
getA D
;D E
setF I
;I J
}K L
public 
DbSet 
< 
CommercialSpecific '
>' (
CommercialSpecifics) <
{= >
get? B
;B C
setD G
;G H
}I J
public 
DbSet 
< 
Client 
> 
Clients $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public'' 
override'' 
Task'' 
<'' 
int''  
>''  !
SaveChangesAsync''" 2
(''2 3
bool''3 7%
acceptAllChangesOnSuccess''8 Q
,''Q R
CancellationToken''S d
cancellationToken''e v
=''w x
default	''y 
)
'' 
{(( 	
foreach)) 

()) 
	Microsoft)) 
.)) 
EntityFrameworkCore)) )
.))) *
ChangeTracking))* 8
.))8 9
EntityEntry))9 D
<))D E
AuditableEntity))E T
>))T U
entry))V [
in))\ ^
ChangeTracker))_ l
.))l m
Entries))m t
<))t u
AuditableEntity	))u 
>
)) 
(
)) 
)
)) 
)
)) 
{** 
if++ 
(++ 
entry++ 
.++ 
State++ 
==++ !
EntityState++" -
.++- .
Added++. 3
)++3 4
{,, 
entry-- 

.--
 
Entity-- 
.-- 
	CreatedBy-- 
=-- 
currentUserService-- 0
.--0 1%
GetCurrentClaimsPrincipal--1 J
(--J K
)--K L
?--L M
.--M N
Claims--N T
.--T U
FirstOrDefault--U c
(--c d
c--d e
=>--f h
c--i j
.--j k
Type--k o
==--p r
$str--s y
)--y z
?--z {
.--{ |
Value	--| 
;
-- 
entry.. 
... 
Entity..  
...  !
CreatedDate..! ,
=..- .
DateTime../ 7
...7 8
UtcNow..8 >
;..> ?
}// 
else00 
if00	 
(00 
entry00 
.00 
State00 
==00 
EntityState00 '
.00' (
Modified00( 0
)000 1
{11 
entry22 

.22
 
Entity22 
.22 
LastModifiedBy22  
=22! "
currentUserService22# 5
.225 6%
GetCurrentClaimsPrincipal226 O
(22O P
)22P Q
?22Q R
.22R S
Claims22S Y
.22Y Z
FirstOrDefault22Z h
(22h i
c22i j
=>22k m
c22n o
.22o p
Type22p t
==22u w
$str22x ~
)22~ 
?	22 
.
22 
Value
22 
;
22 
entry33 
.33 
Entity33  
.33  !
LastModifiedDate33! 1
=332 3
DateTime334 <
.33< =
UtcNow33= C
;33C D
}44 
}55 
return66 
base66 
.66 
SaveChangesAsync66 (
(66( )%
acceptAllChangesOnSuccess66) B
,66B C
cancellationToken66D U
)66U V
;66V W
}77 
}88 
}99 
?D:\Real-Estate\Infrastructure\Repositories\AddressRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 

class 
AddressRepository "
:# $
BaseRepository% 3
<3 4
Address4 ;
>; <
,< =
IAddressRepository> P
{ 
public 
AddressRepository  
(  !
RealEstateContext! 2
context3 :
): ;
:< =
base> B
(B C
contextC J
)J K
{		 	
}

 	
} 
} §
AD:\Real-Estate\Infrastructure\Repositories\ApartmentRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 

class 
ApartmentRepository $
:% &
BaseRepository' 5
<5 6
	Apartment6 ?
>? @
,@ A 
IApartmentRepositoryB V
{ 
public 
ApartmentRepository "
(" #
RealEstateContext# 4
context5 <
)< =
:> ?
base@ D
(D E
contextE L
)L M
{		 	
}

 	
} 
} ¢
@D:\Real-Estate\Infrastructure\Repositories\BasePostRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 

class 
BasePostRepository #
:$ %
BaseRepository& 4
<4 5
BasePost5 =
>= >
,> ?
IBasePostRepository@ S
{ 
public 
BasePostRepository !
(! "
RealEstateContext" 3
context4 ;
); <
:= >
base? C
(C D
contextD K
)K L
{		 	
}

 	
} 
} ²8
<D:\Real-Estate\Infrastructure\Repositories\BaseRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 

class 
BaseRepository 
<  
T  !
>! "
:# $
IAsyncRepository% 5
<5 6
T6 7
>7 8
where9 >
T? @
:A B
classC H
{ 
private		 
readonly		 
RealEstateContext		 *
context		+ 2
;		2 3
public 
BaseRepository 
( 
RealEstateContext /
context0 7
)7 8
{ 	
this 
. 
context 
= 
context "
;" #
} 	
public 
virtual 
async 
Task !
<! "
Result" (
<( )
T) *
>* +
>+ ,
AddAsync- 5
(5 6
T6 7
entity8 >
)> ?
{ 	
await 
context 
. 
Set 
< 
T 
>  
(  !
)! "
." #
AddAsync# +
(+ ,
entity, 2
)2 3
;3 4
await 
context 
. 
SaveChangesAsync *
(* +
)+ ,
;, -
return 
Result 
< 
T 
> 
. 
Success $
($ %
entity% +
)+ ,
;, -
} 	
public 
virtual 
async 
Task !
<! "
Result" (
<( )
T) *
>* +
>+ ,
DeleteAsync- 8
(8 9
Guid9 =
id> @
)@ A
{ 	
var 
result 
= 
await 
FindByIdAsync ,
(, -
id- /
)/ 0
;0 1
if 
( 
result 
!= 
null 
) 
{ 
context 
. 
Set 
< 
T 
> 
( 
)  
.  !
Remove! '
(' (
result( .
.. /
Value/ 4
)4 5
;5 6
await 
context 
. 
SaveChangesAsync .
(. /
)/ 0
;0 1
return 
Result 
< 
T 
>  
.  !
Success! (
(( )
result) /
./ 0
Value0 5
)5 6
;6 7
} 
return 
Result 
< 
T 
> 
. 
Failure $
($ %
$"% '
$str' 6
{6 7
id7 9
}9 :
$str: D
"D E
)E F
;F G
}   	
public"" 
virtual"" 
async"" 
Task"" !
<""! "
Result""" (
<""( )
T"") *
>""* +
>""+ ,
FindByIdAsync""- :
("": ;
Guid""; ?
id""@ B
)""B C
{## 	
var$$ 
result$$ 
=$$ 
await$$ 
context$$ &
.$$& '
Set$$' *
<$$* +
T$$+ ,
>$$, -
($$- .
)$$. /
.$$/ 0
	FindAsync$$0 9
($$9 :
id$$: <
)$$< =
;$$= >
if%% 
(%% 
result%% 
==%% 
null%% 
)%% 
{&& 
return'' 
Result'' 
<'' 
T'' 
>''  
.''  !
Failure''! (
(''( )
$"'') +
$str''+ :
{'': ;
id''; =
}''= >
$str''> H
"''H I
)''I J
;''J K
}(( 
return)) 
Result)) 
<)) 
T)) 
>)) 
.)) 
Success)) $
())$ %
result))% +
)))+ ,
;)), -
}** 	
public,, 
virtual,, 
async,, 
Task,, !
<,,! "
Result,," (
<,,( )
IReadOnlyList,,) 6
<,,6 7
T,,7 8
>,,8 9
>,,9 :
>,,: ; 
GetPagedReponseAsync,,< P
(,,P Q
int,,Q T
page,,U Y
,,,Y Z
int,,[ ^
size,,_ c
),,c d
{-- 	
var.. 
result.. 
=.. 
await.. 
context.. &
...& '
Set..' *
<..* +
T..+ ,
>.., -
(..- .
)... /
.../ 0
Skip..0 4
(..4 5
page..5 9
)..9 :
...: ;
Take..; ?
(..? @
size..@ D
)..D E
...E F
AsNoTracking..F R
(..R S
)..S T
...T U
ToListAsync..U `
(..` a
)..a b
;..b c
return// 
Result// 
<// 
IReadOnlyList// '
<//' (
T//( )
>//) *
>//* +
.//+ ,
Success//, 3
(//3 4
result//4 :
)//: ;
;//; <
}00 	
public22 
virtual22 
async22 
Task22 !
<22! "
Result22" (
<22( )
T22) *
>22* +
>22+ ,
UpdateAsync22- 8
(228 9
T229 :
entity22; A
)22A B
{33 	
context44 
.44 
Entry44 
(44 
entity44  
)44  !
.44! "
State44" '
=44( )
EntityState44* 5
.445 6
Modified446 >
;44> ?
await55 
context55 
.55 
SaveChangesAsync55 *
(55* +
)55+ ,
;55, -
return66 
Result66 
<66 
T66 
>66 
.66 
Success66 $
(66$ %
entity66% +
)66+ ,
;66, -
}77 	
public99 
virtual99 
async99 
Task99 !
<99! "
Result99" (
<99( )
IReadOnlyList99) 6
<996 7
T997 8
>998 9
>999 :
>99: ;
GetAllAsync99< G
(99G H
)99H I
{:: 	
var;; 
result;; 
=;; 
await;; 
context;; &
.;;& '
Set;;' *
<;;* +
T;;+ ,
>;;, -
(;;- .
);;. /
.;;/ 0
ToListAsync;;0 ;
(;;; <
);;< =
;;;= >
return<< 
Result<< 
<<< 
IReadOnlyList<< '
<<<' (
T<<( )
><<) *
><<* +
.<<+ ,
Success<<, 3
(<<3 4
result<<4 :
)<<: ;
;<<; <
}== 	
}>> 
}?? 
>D:\Real-Estate\Infrastructure\Repositories\ClientRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 

class 
ClientRepository !
:" #
BaseRepository$ 2
<2 3
Client3 9
>9 :
,: ;
IClientRepository< M
{ 
public 
ClientRepository 
(  
RealEstateContext  1
context2 9
)9 :
:; <
base= A
(A B
contextB I
)I J
{		 	
}

 	
} 
} Ô
JD:\Real-Estate\Infrastructure\Repositories\CommercialCategoryRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 

class (
CommercialCategoryRepository -
:. /
BaseRepository0 >
<> ?
CommercialCategory? Q
>Q R
,R S)
ICommercialCategoryRepositoryT q
{ 
public (
CommercialCategoryRepository +
(+ ,
RealEstateContext, =
context> E
)E F
:G H
baseI M
(M N
contextN U
)U V
{		 	
}

 	
} 
} ¬
BD:\Real-Estate\Infrastructure\Repositories\CommercialRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 

class  
CommercialRepository %
:& '
BaseRepository( 6
<6 7

Commercial7 A
>A B
,B C!
ICommercialRepositoryD Y
{ 
public  
CommercialRepository #
(# $
RealEstateContext$ 5
context6 =
)= >
:? @
baseA E
(E F
contextF M
)M N
{		 	
}

 	
} 
} Ô
JD:\Real-Estate\Infrastructure\Repositories\CommercialSpecificRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 

class (
CommercialSpecificRepository -
:. /
BaseRepository0 >
<> ?
CommercialSpecific? Q
>Q R
,R S)
ICommercialSpecificRepositoryT q
{ 
public (
CommercialSpecificRepository +
(+ ,
RealEstateContext, =
context> E
)E F
:G H
baseI M
(M N
contextN U
)U V
{		 	
}

 	
} 
} ¶
DD:\Real-Estate\Infrastructure\Repositories\HotelPensionRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 

class "
HotelPensionRepository '
:( )
BaseRepository* 8
<8 9
HotelPension9 E
>E F
,F G#
IHotelPensionRepositoryH _
{ 
public "
HotelPensionRepository %
(% &
RealEstateContext& 7
context8 ?
)? @
:A B
baseC G
(G H
contextH O
)O P
{		 	
}

 	
} 
} 
=D:\Real-Estate\Infrastructure\Repositories\HouseRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 

class 
HouseRepository  
:! "
BaseRepository# 1
<1 2
House2 7
>7 8
,8 9
IHouseRepository: J
{ 
public 
HouseRepository 
( 
RealEstateContext 0
context1 8
)8 9
:: ;
base< @
(@ A
contextA H
)H I
{		 	
}

 	
} 
} §
AD:\Real-Estate\Infrastructure\Repositories\HouseTypeRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 

class 
HouseTypeRepository $
:% &
BaseRepository' 5
<5 6
	HouseType6 ?
>? @
,@ A 
IHouseTypeRepositoryB V
{ 
public 
HouseTypeRepository "
(" #
RealEstateContext# 4
context5 <
)< =
:> ?
base@ D
(D E
contextE L
)L M
{		 	
}

 	
} 
} Ï
ID:\Real-Estate\Infrastructure\Repositories\LotClassificationRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 
class '
LotClassificationRepository )
:* +
BaseRepository, :
<: ;
LotClassification; L
>L M
,M N(
ILotClassificationRepositoryO k
{ 
public '
LotClassificationRepository *
(* +
RealEstateContext+ <
context= D
)D E
:F G
baseH L
(L M
contextM T
)T U
{		 	
}

 	
} 
} 
;D:\Real-Estate\Infrastructure\Repositories\LotRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 

class 
LotRepository 
:  
BaseRepository! /
</ 0
Lot0 3
>3 4
,4 5
ILotRepository6 D
{ 
public 
LotRepository 
( 
RealEstateContext .
context/ 6
)6 7
:8 9
base: >
(> ?
context? F
)F G
{		 	
}

 	
} 
} ¶
DD:\Real-Estate\Infrastructure\Repositories\PartitioningRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 

class "
PartitioningRepository '
:( )
BaseRepository* 8
<8 9
Partitioning9 E
>E F
,F G#
IPartitioningRepositoryH _
{ 
public "
PartitioningRepository %
(% &
RealEstateContext& 7
context8 ?
)? @
:A B
baseC G
(G H
contextH O
)O P
{		 	
}		
 
}

 
} 