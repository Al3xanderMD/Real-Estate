±
:D:\Real-Estate\RealEstate.Identity\ApplicationDbContext.cs
	namespace 	

RealEstate
 
. 
Identity 
{ 
public 
class  
ApplicationDbContext "
:# $
IdentityDbContext% 6
<6 7
ApplicationUser7 F
>F G
{ 
public		  
ApplicationDbContext			 
(		 
DbContextOptions		 .
<		. / 
ApplicationDbContext		/ C
>		C D
options		E L
)		L M
:		N O
base		P T
(		T U
options		U \
)		\ ]
{

 
} 
} 
} ÷ 
JD:\Real-Estate\RealEstate.Identity\InfrastructureIdentityRegistrationDI.cs
	namespace 	

RealEstate
 
. 
Identity 
{ 
public 
static 
class 0
$InfrastructureIdentityRegistrationDI 9
{ 
public 
static	 
IServiceCollection "(
AddInfrastrutureIdentityToDI# ?
(? @
this 
IServiceCollection 
services  (
,( )
IConfiguration
 
configuration &
)& '
{ 
services 
. 
AddDbContext 
<  
ApplicationDbContext -
>- .
(. /
options 
=> 
options 
. 
	UseNpgsql 
( 
configuration 
. 
GetConnectionString (
( 
$str #
)# $
,$ %
builder 
=> 
builder 
. 
MigrationsAssembly !
(! "
typeof 
(  
ApplicationDbContext #
)# $
. 	
Assembly	 
. 
FullName 
) 
) 
) 
; 
services   
.   
AddIdentity   
<   
ApplicationUser   '
,  ' (
IdentityRole  ) 5
>  5 6
(  6 7
)  7 8
.!! $
AddEntityFrameworkStores!!  
<!!  ! 
ApplicationDbContext!!! 5
>!!5 6
(!!6 7
)!!7 8
."" $
AddDefaultTokenProviders""  
(""  !
)""! "
;""" #
services$$ 
.$$ 
AddAuthentication$$ 
($$ 
options$$ %
=>$$& (
{%% 
options&& 
.&& %
DefaultAuthenticateScheme&& %
=&&& '
JwtBearerDefaults&&( 9
.&&9 : 
AuthenticationScheme&&: N
;&&N O
options'' 
.'' "
DefaultChallengeScheme'' "
=''# $
JwtBearerDefaults''% 6
.''6 7 
AuthenticationScheme''7 K
;''K L
options(( 
.(( 
DefaultScheme(( 
=(( 
JwtBearerDefaults(( -
.((- . 
AuthenticationScheme((. B
;((B C
})) 
))) 
.,, 
AddJwtBearer,, 
(,, 
options,, 
=>,, 
{-- 
options.. 
... 
	SaveToken.. 
=.. 
true.. 
;..  
options// 
.//  
RequireHttpsMetadata// #
=//$ %
false//& +
;//+ ,
options00 
.00 %
TokenValidationParameters00 (
=00) *
new00+ .%
TokenValidationParameters00/ H
(00H I
)00I J
{11 
ValidateIssuer22 
=22 
true22 
,22 
ValidateAudience33 
=33 
true33 
,33  
ValidAudience44 
=44 
configuration44 %
[44% &
$str44& 9
]449 :
,44: ;
ValidIssuer55 
=55 
configuration55 #
[55# $
$str55$ 5
]555 6
,556 7
	ClockSkew66 
=66 
TimeSpan66 
.66 
Zero66 !
,66! "
IssuerSigningKey77 
=77 
new77  
SymmetricSecurityKey77 3
(773 4
Encoding774 <
.77< =
UTF877= A
.77A B
GetBytes77B J
(77J K
configuration77K X
[77X Y
$str77Y e
]77e f
)77f g
)77g h
}88 
;88 	
}99 
)99 
;99 	
services:: 
.:: 
	AddScoped:: 
<;; 
IAuthService;; 
,;; 
AuthService;;  
>;;  !
(;;! "
);;" #
;;;# $
return<< 	
services<<
 
;<< 
}== 
}?? 
}@@ ±È
ID:\Real-Estate\RealEstate.Identity\Migrations\20231220171645_initUsers.cs
	namespace 	

RealEstate
 
. 
Identity 
. 

Migrations (
{ 
public

 

partial

 
class

 
	initUsers

 "
:

# $
	Migration

% .
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str #
,# $
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
string& ,
>, -
(- .
type. 2
:2 3
$str4 :
,: ;
nullable< D
:D E
falseF K
)K L
,L M
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 N
,N O
	maxLengthP Y
:Y Z
$num[ ^
,^ _
nullable` h
:h i
truej n
)n o
,o p
NormalizedName "
=# $
table% *
.* +
Column+ 1
<1 2
string2 8
>8 9
(9 :
type: >
:> ?
$str@ X
,X Y
	maxLengthZ c
:c d
$nume h
,h i
nullablej r
:r s
truet x
)x y
,y z
ConcurrencyStamp $
=% &
table' ,
., -
Column- 3
<3 4
string4 :
>: ;
(; <
type< @
:@ A
$strB H
,H I
nullableJ R
:R S
trueT X
)X Y
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 5
,5 6
x7 8
=>9 ;
x< =
.= >
Id> @
)@ A
;A B
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str #
,# $
columns 
: 
table 
=> !
new" %
{   
Id!! 
=!! 
table!! 
.!! 
Column!! %
<!!% &
string!!& ,
>!!, -
(!!- .
type!!. 2
:!!2 3
$str!!4 :
,!!: ;
nullable!!< D
:!!D E
false!!F K
)!!K L
,!!L M
Name"" 
="" 
table""  
.""  !
Column""! '
<""' (
string""( .
>"". /
(""/ 0
type""0 4
:""4 5
$str""6 <
,""< =
nullable""> F
:""F G
true""H L
)""L M
,""M N
UserName## 
=## 
table## $
.##$ %
Column##% +
<##+ ,
string##, 2
>##2 3
(##3 4
type##4 8
:##8 9
$str##: R
,##R S
	maxLength##T ]
:##] ^
$num##_ b
,##b c
nullable##d l
:##l m
true##n r
)##r s
,##s t
NormalizedUserName$$ &
=$$' (
table$$) .
.$$. /
Column$$/ 5
<$$5 6
string$$6 <
>$$< =
($$= >
type$$> B
:$$B C
$str$$D \
,$$\ ]
	maxLength$$^ g
:$$g h
$num$$i l
,$$l m
nullable$$n v
:$$v w
true$$x |
)$$| }
,$$} ~
Email%% 
=%% 
table%% !
.%%! "
Column%%" (
<%%( )
string%%) /
>%%/ 0
(%%0 1
type%%1 5
:%%5 6
$str%%7 O
,%%O P
	maxLength%%Q Z
:%%Z [
$num%%\ _
,%%_ `
nullable%%a i
:%%i j
true%%k o
)%%o p
,%%p q
NormalizedEmail&& #
=&&$ %
table&&& +
.&&+ ,
Column&&, 2
<&&2 3
string&&3 9
>&&9 :
(&&: ;
type&&; ?
:&&? @
$str&&A Y
,&&Y Z
	maxLength&&[ d
:&&d e
$num&&f i
,&&i j
nullable&&k s
:&&s t
true&&u y
)&&y z
,&&z {
EmailConfirmed'' "
=''# $
table''% *
.''* +
Column''+ 1
<''1 2
bool''2 6
>''6 7
(''7 8
type''8 <
:''< =
$str''> G
,''G H
nullable''I Q
:''Q R
false''S X
)''X Y
,''Y Z
PasswordHash((  
=((! "
table((# (
.((( )
Column(() /
<((/ 0
string((0 6
>((6 7
(((7 8
type((8 <
:((< =
$str((> D
,((D E
nullable((F N
:((N O
true((P T
)((T U
,((U V
SecurityStamp)) !
=))" #
table))$ )
.))) *
Column))* 0
<))0 1
string))1 7
>))7 8
())8 9
type))9 =
:))= >
$str))? E
,))E F
nullable))G O
:))O P
true))Q U
)))U V
,))V W
ConcurrencyStamp** $
=**% &
table**' ,
.**, -
Column**- 3
<**3 4
string**4 :
>**: ;
(**; <
type**< @
:**@ A
$str**B H
,**H I
nullable**J R
:**R S
true**T X
)**X Y
,**Y Z
PhoneNumber++ 
=++  !
table++" '
.++' (
Column++( .
<++. /
string++/ 5
>++5 6
(++6 7
type++7 ;
:++; <
$str++= C
,++C D
nullable++E M
:++M N
true++O S
)++S T
,++T U 
PhoneNumberConfirmed,, (
=,,) *
table,,+ 0
.,,0 1
Column,,1 7
<,,7 8
bool,,8 <
>,,< =
(,,= >
type,,> B
:,,B C
$str,,D M
,,,M N
nullable,,O W
:,,W X
false,,Y ^
),,^ _
,,,_ `
TwoFactorEnabled-- $
=--% &
table--' ,
.--, -
Column--- 3
<--3 4
bool--4 8
>--8 9
(--9 :
type--: >
:--> ?
$str--@ I
,--I J
nullable--K S
:--S T
false--U Z
)--Z [
,--[ \

LockoutEnd.. 
=..  
table..! &
...& '
Column..' -
<..- .
DateTimeOffset... <
>..< =
(..= >
type..> B
:..B C
$str..D ^
,..^ _
nullable..` h
:..h i
true..j n
)..n o
,..o p
LockoutEnabled// "
=//# $
table//% *
.//* +
Column//+ 1
<//1 2
bool//2 6
>//6 7
(//7 8
type//8 <
://< =
$str//> G
,//G H
nullable//I Q
://Q R
false//S X
)//X Y
,//Y Z
AccessFailedCount00 %
=00& '
table00( -
.00- .
Column00. 4
<004 5
int005 8
>008 9
(009 :
type00: >
:00> ?
$str00@ I
,00I J
nullable00K S
:00S T
false00U Z
)00Z [
}11 
,11 
constraints22 
:22 
table22 "
=>22# %
{33 
table44 
.44 

PrimaryKey44 $
(44$ %
$str44% 5
,445 6
x447 8
=>449 ;
x44< =
.44= >
Id44> @
)44@ A
;44A B
}55 
)55 
;55 
migrationBuilder77 
.77 
CreateTable77 (
(77( )
name88 
:88 
$str88 (
,88( )
columns99 
:99 
table99 
=>99 !
new99" %
{:: 
Id;; 
=;; 
table;; 
.;; 
Column;; %
<;;% &
int;;& )
>;;) *
(;;* +
type;;+ /
:;;/ 0
$str;;1 :
,;;: ;
nullable;;< D
:;;D E
false;;F K
);;K L
.<< 

Annotation<< #
(<<# $
$str<<$ D
,<<D E)
NpgsqlValueGenerationStrategy<<F c
.<<c d#
IdentityByDefaultColumn<<d {
)<<{ |
,<<| }
RoleId== 
=== 
table== "
.==" #
Column==# )
<==) *
string==* 0
>==0 1
(==1 2
type==2 6
:==6 7
$str==8 >
,==> ?
nullable==@ H
:==H I
false==J O
)==O P
,==P Q
	ClaimType>> 
=>> 
table>>  %
.>>% &
Column>>& ,
<>>, -
string>>- 3
>>>3 4
(>>4 5
type>>5 9
:>>9 :
$str>>; A
,>>A B
nullable>>C K
:>>K L
true>>M Q
)>>Q R
,>>R S

ClaimValue?? 
=??  
table??! &
.??& '
Column??' -
<??- .
string??. 4
>??4 5
(??5 6
type??6 :
:??: ;
$str??< B
,??B C
nullable??D L
:??L M
true??N R
)??R S
}@@ 
,@@ 
constraintsAA 
:AA 
tableAA "
=>AA# %
{BB 
tableCC 
.CC 

PrimaryKeyCC $
(CC$ %
$strCC% :
,CC: ;
xCC< =
=>CC> @
xCCA B
.CCB C
IdCCC E
)CCE F
;CCF G
tableDD 
.DD 

ForeignKeyDD $
(DD$ %
nameEE 
:EE 
$strEE F
,EEF G
columnFF 
:FF 
xFF  !
=>FF" $
xFF% &
.FF& '
RoleIdFF' -
,FF- .
principalTableGG &
:GG& '
$strGG( 5
,GG5 6
principalColumnHH '
:HH' (
$strHH) -
,HH- .
onDeleteII  
:II  !
ReferentialActionII" 3
.II3 4
CascadeII4 ;
)II; <
;II< =
}JJ 
)JJ 
;JJ 
migrationBuilderLL 
.LL 
CreateTableLL (
(LL( )
nameMM 
:MM 
$strMM (
,MM( )
columnsNN 
:NN 
tableNN 
=>NN !
newNN" %
{OO 
IdPP 
=PP 
tablePP 
.PP 
ColumnPP %
<PP% &
intPP& )
>PP) *
(PP* +
typePP+ /
:PP/ 0
$strPP1 :
,PP: ;
nullablePP< D
:PPD E
falsePPF K
)PPK L
.QQ 

AnnotationQQ #
(QQ# $
$strQQ$ D
,QQD E)
NpgsqlValueGenerationStrategyQQF c
.QQc d#
IdentityByDefaultColumnQQd {
)QQ{ |
,QQ| }
UserIdRR 
=RR 
tableRR "
.RR" #
ColumnRR# )
<RR) *
stringRR* 0
>RR0 1
(RR1 2
typeRR2 6
:RR6 7
$strRR8 >
,RR> ?
nullableRR@ H
:RRH I
falseRRJ O
)RRO P
,RRP Q
	ClaimTypeSS 
=SS 
tableSS  %
.SS% &
ColumnSS& ,
<SS, -
stringSS- 3
>SS3 4
(SS4 5
typeSS5 9
:SS9 :
$strSS; A
,SSA B
nullableSSC K
:SSK L
trueSSM Q
)SSQ R
,SSR S

ClaimValueTT 
=TT  
tableTT! &
.TT& '
ColumnTT' -
<TT- .
stringTT. 4
>TT4 5
(TT5 6
typeTT6 :
:TT: ;
$strTT< B
,TTB C
nullableTTD L
:TTL M
trueTTN R
)TTR S
}UU 
,UU 
constraintsVV 
:VV 
tableVV "
=>VV# %
{WW 
tableXX 
.XX 

PrimaryKeyXX $
(XX$ %
$strXX% :
,XX: ;
xXX< =
=>XX> @
xXXA B
.XXB C
IdXXC E
)XXE F
;XXF G
tableYY 
.YY 

ForeignKeyYY $
(YY$ %
nameZZ 
:ZZ 
$strZZ F
,ZZF G
column[[ 
:[[ 
x[[  !
=>[[" $
x[[% &
.[[& '
UserId[[' -
,[[- .
principalTable\\ &
:\\& '
$str\\( 5
,\\5 6
principalColumn]] '
:]]' (
$str]]) -
,]]- .
onDelete^^  
:^^  !
ReferentialAction^^" 3
.^^3 4
Cascade^^4 ;
)^^; <
;^^< =
}__ 
)__ 
;__ 
migrationBuilderaa 
.aa 
CreateTableaa (
(aa( )
namebb 
:bb 
$strbb (
,bb( )
columnscc 
:cc 
tablecc 
=>cc !
newcc" %
{dd 
LoginProvideree !
=ee" #
tableee$ )
.ee) *
Columnee* 0
<ee0 1
stringee1 7
>ee7 8
(ee8 9
typeee9 =
:ee= >
$stree? E
,eeE F
nullableeeG O
:eeO P
falseeeQ V
)eeV W
,eeW X
ProviderKeyff 
=ff  !
tableff" '
.ff' (
Columnff( .
<ff. /
stringff/ 5
>ff5 6
(ff6 7
typeff7 ;
:ff; <
$strff= C
,ffC D
nullableffE M
:ffM N
falseffO T
)ffT U
,ffU V
ProviderDisplayNamegg '
=gg( )
tablegg* /
.gg/ 0
Columngg0 6
<gg6 7
stringgg7 =
>gg= >
(gg> ?
typegg? C
:ggC D
$strggE K
,ggK L
nullableggM U
:ggU V
trueggW [
)gg[ \
,gg\ ]
UserIdhh 
=hh 
tablehh "
.hh" #
Columnhh# )
<hh) *
stringhh* 0
>hh0 1
(hh1 2
typehh2 6
:hh6 7
$strhh8 >
,hh> ?
nullablehh@ H
:hhH I
falsehhJ O
)hhO P
}ii 
,ii 
constraintsjj 
:jj 
tablejj "
=>jj# %
{kk 
tablell 
.ll 

PrimaryKeyll $
(ll$ %
$strll% :
,ll: ;
xll< =
=>ll> @
newllA D
{llE F
xllG H
.llH I
LoginProviderllI V
,llV W
xllX Y
.llY Z
ProviderKeyllZ e
}llf g
)llg h
;llh i
tablemm 
.mm 

ForeignKeymm $
(mm$ %
namenn 
:nn 
$strnn F
,nnF G
columnoo 
:oo 
xoo  !
=>oo" $
xoo% &
.oo& '
UserIdoo' -
,oo- .
principalTablepp &
:pp& '
$strpp( 5
,pp5 6
principalColumnqq '
:qq' (
$strqq) -
,qq- .
onDeleterr  
:rr  !
ReferentialActionrr" 3
.rr3 4
Cascaderr4 ;
)rr; <
;rr< =
}ss 
)ss 
;ss 
migrationBuilderuu 
.uu 
CreateTableuu (
(uu( )
namevv 
:vv 
$strvv '
,vv' (
columnsww 
:ww 
tableww 
=>ww !
newww" %
{xx 
UserIdyy 
=yy 
tableyy "
.yy" #
Columnyy# )
<yy) *
stringyy* 0
>yy0 1
(yy1 2
typeyy2 6
:yy6 7
$stryy8 >
,yy> ?
nullableyy@ H
:yyH I
falseyyJ O
)yyO P
,yyP Q
RoleIdzz 
=zz 
tablezz "
.zz" #
Columnzz# )
<zz) *
stringzz* 0
>zz0 1
(zz1 2
typezz2 6
:zz6 7
$strzz8 >
,zz> ?
nullablezz@ H
:zzH I
falsezzJ O
)zzO P
}{{ 
,{{ 
constraints|| 
:|| 
table|| "
=>||# %
{}} 
table~~ 
.~~ 

PrimaryKey~~ $
(~~$ %
$str~~% 9
,~~9 :
x~~; <
=>~~= ?
new~~@ C
{~~D E
x~~F G
.~~G H
UserId~~H N
,~~N O
x~~P Q
.~~Q R
RoleId~~R X
}~~Y Z
)~~Z [
;~~[ \
table 
. 

ForeignKey $
($ %
name
 
:
 
$str
 E
,
E F
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
RoleId
' -
,
- .
principalTable
 &
:
& '
$str
( 5
,
5 6
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Cascade
4 ;
)
; <
;
< =
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 E
,
E F
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
UserId
' -
,
- .
principalTable
 &
:
& '
$str
( 5
,
5 6
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Cascade
4 ;
)
; <
;
< =
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
 
:
 
$str
 (
,
( )
columns
 
:
 
table
 
=>
 !
new
" %
{
 
UserId
 
=
 
table
 "
.
" #
Column
# )
<
) *
string
* 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 >
,
> ?
nullable
@ H
:
H I
false
J O
)
O P
,
P Q
LoginProvider
 !
=
" #
table
$ )
.
) *
Column
* 0
<
0 1
string
1 7
>
7 8
(
8 9
type
9 =
:
= >
$str
? E
,
E F
nullable
G O
:
O P
false
Q V
)
V W
,
W X
Name
 
=
 
table
  
.
  !
Column
! '
<
' (
string
( .
>
. /
(
/ 0
type
0 4
:
4 5
$str
6 <
,
< =
nullable
> F
:
F G
false
H M
)
M N
,
N O
Value
 
=
 
table
 !
.
! "
Column
" (
<
( )
string
) /
>
/ 0
(
0 1
type
1 5
:
5 6
$str
7 =
,
= >
nullable
? G
:
G H
true
I M
)
M N
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% :
,
: ;
x
< =
=>
> @
new
A D
{
E F
x
G H
.
H I
UserId
I O
,
O P
x
Q R
.
R S
LoginProvider
S `
,
` a
x
b c
.
c d
Name
d h
}
i j
)
j k
;
k l
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 F
,
F G
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
UserId
' -
,
- .
principalTable
 &
:
& '
$str
( 5
,
5 6
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Cascade
4 ;
)
; <
;
< =
}
 
)
 
;
 
migrationBuilder
¡¡ 
.
¡¡ 
CreateIndex
¡¡ (
(
¡¡( )
name
¢¢ 
:
¢¢ 
$str
¢¢ 2
,
¢¢2 3
table
££ 
:
££ 
$str
££ )
,
££) *
column
¤¤ 
:
¤¤ 
$str
¤¤  
)
¤¤  !
;
¤¤! "
migrationBuilder
¦¦ 
.
¦¦ 
CreateIndex
¦¦ (
(
¦¦( )
name
§§ 
:
§§ 
$str
§§ %
,
§§% &
table
¨¨ 
:
¨¨ 
$str
¨¨ $
,
¨¨$ %
column
©© 
:
©© 
$str
©© (
,
©©( )
unique
ªª 
:
ªª 
true
ªª 
)
ªª 
;
ªª 
migrationBuilder
¬¬ 
.
¬¬ 
CreateIndex
¬¬ (
(
¬¬( )
name
­­ 
:
­­ 
$str
­­ 2
,
­­2 3
table
®® 
:
®® 
$str
®® )
,
®®) *
column
¯¯ 
:
¯¯ 
$str
¯¯  
)
¯¯  !
;
¯¯! "
migrationBuilder
±± 
.
±± 
CreateIndex
±± (
(
±±( )
name
²² 
:
²² 
$str
²² 2
,
²²2 3
table
³³ 
:
³³ 
$str
³³ )
,
³³) *
column
´´ 
:
´´ 
$str
´´  
)
´´  !
;
´´! "
migrationBuilder
¶¶ 
.
¶¶ 
CreateIndex
¶¶ (
(
¶¶( )
name
·· 
:
·· 
$str
·· 1
,
··1 2
table
¸¸ 
:
¸¸ 
$str
¸¸ (
,
¸¸( )
column
¹¹ 
:
¹¹ 
$str
¹¹  
)
¹¹  !
;
¹¹! "
migrationBuilder
»» 
.
»» 
CreateIndex
»» (
(
»»( )
name
¼¼ 
:
¼¼ 
$str
¼¼ "
,
¼¼" #
table
½½ 
:
½½ 
$str
½½ $
,
½½$ %
column
¾¾ 
:
¾¾ 
$str
¾¾ )
)
¾¾) *
;
¾¾* +
migrationBuilder
ÀÀ 
.
ÀÀ 
CreateIndex
ÀÀ (
(
ÀÀ( )
name
ÁÁ 
:
ÁÁ 
$str
ÁÁ %
,
ÁÁ% &
table
ÂÂ 
:
ÂÂ 
$str
ÂÂ $
,
ÂÂ$ %
column
ÃÃ 
:
ÃÃ 
$str
ÃÃ ,
,
ÃÃ, -
unique
ÄÄ 
:
ÄÄ 
true
ÄÄ 
)
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
	protected
ÈÈ 
override
ÈÈ 
void
ÈÈ 
Down
ÈÈ  $
(
ÈÈ$ %
MigrationBuilder
ÈÈ% 5
migrationBuilder
ÈÈ6 F
)
ÈÈF G
{
ÉÉ 	
migrationBuilder
ÊÊ 
.
ÊÊ 
	DropTable
ÊÊ &
(
ÊÊ& '
name
ËË 
:
ËË 
$str
ËË (
)
ËË( )
;
ËË) *
migrationBuilder
ÍÍ 
.
ÍÍ 
	DropTable
ÍÍ &
(
ÍÍ& '
name
ÎÎ 
:
ÎÎ 
$str
ÎÎ (
)
ÎÎ( )
;
ÎÎ) *
migrationBuilder
ÐÐ 
.
ÐÐ 
	DropTable
ÐÐ &
(
ÐÐ& '
name
ÑÑ 
:
ÑÑ 
$str
ÑÑ (
)
ÑÑ( )
;
ÑÑ) *
migrationBuilder
ÓÓ 
.
ÓÓ 
	DropTable
ÓÓ &
(
ÓÓ& '
name
ÔÔ 
:
ÔÔ 
$str
ÔÔ '
)
ÔÔ' (
;
ÔÔ( )
migrationBuilder
ÖÖ 
.
ÖÖ 
	DropTable
ÖÖ &
(
ÖÖ& '
name
×× 
:
×× 
$str
×× (
)
××( )
;
××) *
migrationBuilder
ÙÙ 
.
ÙÙ 
	DropTable
ÙÙ &
(
ÙÙ& '
name
ÚÚ 
:
ÚÚ 
$str
ÚÚ #
)
ÚÚ# $
;
ÚÚ$ %
migrationBuilder
ÜÜ 
.
ÜÜ 
	DropTable
ÜÜ &
(
ÜÜ& '
name
ÝÝ 
:
ÝÝ 
$str
ÝÝ #
)
ÝÝ# $
;
ÝÝ$ %
}
ÞÞ 	
}
ßß 
}àà ÿ
<D:\Real-Estate\RealEstate.Identity\Models\ApplicationUser.cs
	namespace 	

RealEstate
 
. 
Identity 
. 
Models $
{ 
public 
class 
ApplicationUser 
: 
IdentityUser  ,
{ 
public 
string	 
? 
Name 
{ 
get 
; 
set  
;  !
}" #
} 
}		 ´

?D:\Real-Estate\RealEstate.Identity\Models\EmailConfiguration.cs
	namespace 	

RealEstate
 
. 
Identity 
. 
Models $
{ 
public 

class 
EmailConfiguration #
{ 
public 
string 
From 
{ 
get  
;  !
set" %
;% &
}' (
=) *
null+ /
!/ 0
;0 1
public 
string 

SmtpServer  
{! "
get# &
;& '
set( +
;+ ,
}- .
=/ 0
null1 5
!5 6
;6 7
public 
int 
Port 
{ 
get 
; 
set "
;" #
}$ %
public 
string 
Username 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
null/ 3
!3 4
;4 5
public		 
string		 
Password		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
=		- .
null		/ 3
!		3 4
;		4 5
}

 
} Ù
4D:\Real-Estate\RealEstate.Identity\Models\Message.cs
	namespace 	

RealEstate
 
. 
Identity 
. 
Models $
{ 
public 

class 
Message 
{ 
public 
List 
< 
MailboxAddress "
>" #
To$ &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
string 
Subject 
{ 
get  #
;# $
set% (
;( )
}* +
public

 
string

 
Content

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
public 
Message 
( 
IEnumerable "
<" #
string# )
>) *
to+ -
,- .
string/ 5
subject6 =
,= >
string? E
contentF M
)M N
{N O
To 
= 
new 
List 
< 
MailboxAddress (
>( )
() *
)* +
;+ ,
To 
. 
AddRange 
( 
to 
. 
Select !
(! "
x" #
=>$ &
new' *
MailboxAddress+ 9
(9 :
$str: A
,A B
xC D
)D E
)E F
)F G
;G H
Subject 
= 
subject $
;$ %
Content 
= 
content $
;$ %
} 
} 
} ²
6D:\Real-Estate\RealEstate.Identity\Models\UserRoles.cs
	namespace 	

RealEstate
 
. 
Identity 
. 
Models $
{ 
public 
static 
class 
	UserRoles 
{ 
public 
const	 
string 
Admin 
= 
$str %
;% &
public 
const	 
string 
Client 
= 
$str '
;' (
public 
const	 
string 
Agent 
= 
$str %
;% &
} 
}		 æ
:D:\Real-Estate\RealEstate.Identity\Services\AuthService.cs
	namespace 	

RealEstate
 
. 
Identity 
. 
Services &
{ 
public 
class 
AuthService 
: 
IAuthService (
{ 
private 
readonly 
UserManager $
<$ %
ApplicationUser% 4
>4 5
userManager6 A
;A B
private 
readonly 
RoleManager $
<$ %
IdentityRole% 1
>1 2
roleManager3 >
;> ?
private 
readonly 
IConfiguration '
configuration( 5
;5 6
private 
readonly 
IEmailService &
emailService' 3
;3 4
public 
AuthService 
( 
UserManager &
<& '
ApplicationUser' 6
>6 7
userManager8 C
,C D
RoleManagerE P
<P Q
IdentityRoleQ ]
>] ^
roleManager_ j
,j k
IConfigurationl z
configuration	{ 
,
 
IEmailService
 
emailService
 ¤
)
¤ ¥
{ 	
this 
. 
userManager 
= 
userManager *
;* +
this 
. 
roleManager 
= 
roleManager *
;* +
this 
. 
configuration 
=  
configuration! .
;. /
this 
. 
emailService 
= 
emailService  ,
;, -
} 	
public 
async 
Task 
< 
( 
int 
, 
string  &
)& '
>' (
Registeration) 6
(6 7
RegistrationModel7 H
modelI N
)N O
{ 	
var 

userExists 
= 
await "
userManager# .
.. /
FindByNameAsync/ >
(> ?
model? D
.D E
UsernameE M
)M N
;N O
var 
emailExists 
= 
await #
userManager$ /
./ 0
FindByEmailAsync0 @
(@ A
modelA F
.F G
EmailG L
)L M
;M N
if   
(   
emailExists   
!=   
null   #
)  # $
return!! 
(!! 
$num!! 
,!! 
$str!! 0
)!!0 1
;!!1 2
if## 
(## 

userExists## 
!=## 
null## "
)##" #
return$$ 
($$ 
$num$$ 
,$$ 
$str$$ 4
)$$4 5
;$$5 6
ApplicationUser&& 
?&& 
user&& !
=&&" #
new&&$ '
ApplicationUser&&( 7
(&&7 8
)&&8 9
{'' 
Email(( 
=(( 
model(( 
.(( 
Email(( #
,((# $
SecurityStamp)) 
=)) 
Guid))  $
.))$ %
NewGuid))% ,
()), -
)))- .
.)). /
ToString))/ 7
())7 8
)))8 9
,))9 :
UserName** 
=** 
model**  
.**  !
Username**! )
,**) *
Name++ 
=++ 
model++ 
.++ 
Name++ !
,++! "
PhoneNumber,, 
=,, 
model,, #
.,,# $
PhoneNumber,,$ /
}-- 
;-- 
var// 
createUserResult//  
=//! "
await//# (
userManager//) 4
.//4 5
CreateAsync//5 @
(//@ A
user//A E
,//E F
model//G L
.//L M
Password//M U
)//U V
;//V W
if00 
(00 
!00 
createUserResult00 !
.00! "
	Succeeded00" +
)00+ ,
return11 
(11 
$num11 
,11 
$str11 [
)11[ \
;11\ ]
user44 
=44 
await44 
userManager44 $
.44$ %
FindByNameAsync44% 4
(444 5
model445 :
.44: ;
Username44; C
)44C D
;44D E
model55 
.55 
Id55 
=55 
user55 
.55 
Id55 
.55 
ToString55 '
(55' (
)55( )
;55) *
if77 
(77 
!77 
await77 
roleManager77 "
.77" #
RoleExistsAsync77# 2
(772 3
model773 8
.778 9
Role779 =
)77= >
)77> ?
await88 
roleManager88 !
.88! "
CreateAsync88" -
(88- .
new88. 1
IdentityRole882 >
(88> ?
model88? D
.88D E
Role88E I
)88I J
)88J K
;88K L
if:: 
(:: 
await:: 
roleManager:: !
.::! "
RoleExistsAsync::" 1
(::1 2
	UserRoles::2 ;
.::; <
Client::< B
)::B C
)::C D
await;; 
userManager;; !
.;;! "
AddToRoleAsync;;" 0
(;;0 1
user;;1 5
,;;5 6
model;;7 <
.;;< =
Role;;= A
);;A B
;;;B C
var== 
token== 
=== 
await== 
userManager== )
.==) */
#GenerateEmailConfirmationTokenAsync==* M
(==M N
user==N R
)==R S
;==S T
var>> 
confirmationLink>>  
=>>! "
configuration>># 0
[>>0 1
$str>>1 9
]>>9 :
+>>; <
$str>>= i
+>>j k
user>>l p
.>>p q
Email>>q v
+>>w x
$str	>>y 
+
>> 
token
>> 
;
>> 
var?? 
message?? 
=?? 
new?? 
Message?? %
(??% &
new??& )
string??* 0
[??0 1
]??1 2
{??3 4
user??5 9
.??9 :
Email??: ?
}??@ A
,??A B
$str??C \
,??\ ]
confirmationLink??^ n
)??n o
;??o p
emailService@@ 
.@@ 
	SendEmail@@ "
(@@" #
message@@# *
)@@* +
;@@+ ,
userBB 
.BB 
EmailConfirmedBB 
=BB  !
falseBB" '
;BB' (
returnCC 
(CC 
$numCC 
,CC 
$strCC 3
)CC3 4
;CC4 5
}DD 	
publicFF 
asyncFF 
TaskFF 
<FF 
(FF 
intFF 
,FF 
stringFF  &
)FF& '
>FF' (
LoginFF) .
(FF. /

LoginModelFF/ 9
modelFF: ?
)FF? @
{GG 	
varHH 
userHH 
=HH 
awaitHH 
userManagerHH (
.HH( )
FindByEmailAsyncHH) 9
(HH9 :
modelHH: ?
.HH? @
EmailHH@ E
!HHE F
)HHF G
;HHG H
ifNN 
(NN 
userNN 
.NN 
EmailConfirmedNN #
==NN$ &
falseNN' ,
)NN, -
returnOO 
(OO 
$numOO 
,OO 
$strOO 0
)OO0 1
;OO1 2
ifQQ 
(QQ 
userQQ 
==QQ 
nullQQ 
||QQ 
!QQ  !
awaitQQ! &
userManagerQQ' 2
.QQ2 3
CheckPasswordAsyncQQ3 E
(QQE F
userQQF J
,QQJ K
modelQQL Q
.QQQ R
PasswordQQR Z
!QQZ [
)QQ[ \
)QQ\ ]
returnRR 
(RR 
$numRR 
,RR 
$strRR 6
)RR6 7
;RR7 8
varUU 
	userRolesUU 
=UU 
awaitUU !
userManagerUU" -
.UU- .
GetRolesAsyncUU. ;
(UU; <
userUU< @
)UU@ A
;UUA B
varVV 

authClaimsVV 
=VV 
newVV  
ListVV! %
<VV% &
ClaimVV& +
>VV+ ,
{WW 
newXX 
ClaimXX 
(XX 

ClaimTypesXX #
.XX# $
NameXX$ (
,XX( )
userXX* .
.XX. /
UserNameXX/ 7
!XX7 8
)XX8 9
,XX9 :
newYY 
ClaimYY 
(YY #
JwtRegisteredClaimNamesYY 0
.YY0 1
JtiYY1 4
,YY4 5
GuidYY6 :
.YY: ;
NewGuidYY; B
(YYB C
)YYC D
.YYD E
ToStringYYE M
(YYM N
)YYN O
)YYO P
,YYP Q
}ZZ 
;ZZ 
foreach\\ 
(\\ 
var\\ 
userRole\\ !
in\\" $
	userRoles\\% .
)\\. /
{]] 

authClaims^^ 
.^^ 
Add^^ 
(^^ 
new^^ "
Claim^^# (
(^^( )

ClaimTypes^^) 3
.^^3 4
Role^^4 8
,^^8 9
userRole^^: B
)^^B C
)^^C D
;^^D E
}__ 

authClaimsaa 
.aa 
Addaa 
(aa 
newaa 
Claimaa $
(aa$ %
$straa% -
,aa- .
useraa. 2
.aa2 3
Idaa3 5
!aa5 6
)aa6 7
)aa7 8
;aa8 9

authClaimsbb 
.bb 
Addbb 
(bb 
newbb 
Claimbb $
(bb$ %

ClaimTypesbb% /
.bb/ 0
Emailbb0 5
,bb5 6
userbb7 ;
.bb; <
Emailbb< A
!bbA B
)bbB C
)bbC D
;bbD E

authClaimscc 
.cc 
Addcc 
(cc 
newcc 
Claimcc $
(cc$ %

ClaimTypescc% /
.cc/ 0
MobilePhonecc0 ;
,cc; <
usercc= A
.ccA B
PhoneNumberccB M
!ccM N
)ccN O
)ccO P
;ccP Q

authClaimsdd 
.dd 
Adddd 
(dd 
newdd 
Claimdd $
(dd$ %

ClaimTypesdd% /
.dd/ 0
Namedd0 4
,dd4 5
userdd6 :
.dd: ;
Namedd; ?
!dd? @
)dd@ A
)ddA B
;ddB C
stringff 
tokenff 
=ff 
GenerateTokenff (
(ff( )

authClaimsff) 3
)ff3 4
;ff4 5
returngg 
(gg 
$numgg 
,gg 
tokengg 
)gg 
;gg 
}hh 	
publicjj 
asyncjj 
Taskjj 
<jj 
(jj 
intjj 
,jj 
stringjj  &
)jj& '
>jj' (
ConfirmEmailjj) 5
(jj5 6
stringjj6 <
emailjj= B
,jjB C
stringjjD J
tokenjjK P
)jjP Q
{kk 	
varll 
userll 
=ll 
awaitll 
userManagerll (
.ll( )
FindByEmailAsyncll) 9
(ll9 :
emailll: ?
)ll? @
;ll@ A
ifmm 
(mm 
usermm 
!=mm 
nullmm 
)mm 
{nn 
varoo 
resultoo 
=oo 
awaitoo "
userManageroo# .
.oo. /
ConfirmEmailAsyncoo/ @
(oo@ A
userooA E
,ooE F
tokenooG L
)ooL M
;ooM N
ifpp 
(pp 
resultpp 
.pp 
	Succeededpp $
)pp$ %
{qq 
returnrr 
(rr 
$numrr 
,rr 
$strrr =
)rr= >
;rr> ?
}ss 
}tt 
returnuu 
(uu 
$numuu 
,uu 
$struu 
)uu 
;uu  
}vv 	
publicxx 
asyncxx 
Taskxx 
<xx 
(xx 
intxx 
,xx 
stringxx  &
)xx& '
>xx' (
ForgotPasswordxx) 7
(xx7 8
stringxx8 >
emailxx? D
)xxD E
{yy 	
varzz 
userzz 
=zz 
awaitzz 
userManagerzz (
.zz( )
FindByEmailAsynczz) 9
(zz9 :
emailzz: ?
)zz? @
;zz@ A
if{{ 
({{ 
user{{ 
=={{ 
null{{ 
){{ 
return|| 
(|| 
$num|| 
,|| 
$str|| ,
)||, -
;||- .
var~~ 
token~~ 
=~~ 
await~~ 
userManager~~ )
.~~) *+
GeneratePasswordResetTokenAsync~~* I
(~~I J
user~~J N
)~~N O
;~~O P
var 
forgotPasswordLink "
=# $
configuration% 2
[2 3
$str3 ;
]; <
+= >
$str? l
+m n
usero s
.s t
Emailt y
+z {
$str	| 
+
 
token
 
;
 
var
 
message
 
=
 
new
 
Message
 %
(
% &
new
& )
string
* 0
[
0 1
]
1 2
{
3 4
user
5 9
.
9 :
Email
: ?
}
@ A
,
A B
$str
C Y
,
Y Z 
forgotPasswordLink
[ m
)
m n
;
n o
emailService
 
.
 
	SendEmail
 "
(
" #
message
# *
)
* +
;
+ ,
return
 
(
 
$num
 
,
 
$str
 @
)
@ A
;
A B
}
 	
public
 
async
 
Task
 
<
 
(
 
int
 
,
 
string
  &
)
& '
>
' ('
ResetPasswordConfirmation
) B
(
B C 
ResetPasswordModel
C U
model
V [
)
[ \
{
 	
var
 
user
 
=
 
await
 
userManager
 (
.
( )
FindByEmailAsync
) 9
(
9 :
model
: ?
.
? @
Email
@ E
)
E F
;
F G
if
 
(
 
user
 
==
 
null
 
)
 
return
 
(
 
$num
 
,
 
$str
 ,
)
, -
;
- .
var
 
resetPassResult
 
=
  !
await
" '
userManager
( 3
.
3 4 
ResetPasswordAsync
4 F
(
F G
user
G K
,
K L
model
M R
.
R S
Token
S X
,
X Y
model
Z _
.
_ `
Password
` h
)
h i
;
i j
if
 
(
 
!
 
resetPassResult
 
.
  
	Succeeded
  )
)
) *
{
 
foreach
 
(
 
var
 
error
 "
in
# %
resetPassResult
& 5
.
5 6
Errors
6 <
)
< =
{
 
return
 
(
 
$num
 
,
 
error
 $
.
$ %
Description
% 0
)
0 1
;
1 2
}
 
}
 
return
 
(
 
$num
 
,
 
$str
 2
)
2 3
;
3 4
}
 	
public
 
async
 
Task
 
<
 
(
 
int
 
,
 
string
  &
)
& '
>
' (

DeleteUser
) 3
(
3 4
string
4 :
email
; @
)
@ A
{
 	
var
 
user
 
=
 
await
 
userManager
 (
.
( )
FindByEmailAsync
) 9
(
9 :
email
: ?
)
? @
;
@ A
if
 
(
 
user
 
==
 
null
 
)
 
return
 
(
 
$num
 
,
 
$str
 +
)
+ ,
;
, -
if
 
(
 
user
 
.
 
EmailConfirmed
 #
==
$ &
false
' ,
)
, -
return
   
(
   
$num
   
,
   
$str
   0
)
  0 1
;
  1 2
user
¢¢ 
.
¢¢ 
EmailConfirmed
¢¢ 
=
¢¢  !
false
¢¢" '
;
¢¢' (
return
££ 
(
££ 
$num
££ 
,
££ 
$str
££ 2
)
££2 3
;
££3 4
}
¤¤ 	
private
¦¦ 
string
¦¦ 
GenerateToken
¦¦ $
(
¦¦$ %
IEnumerable
¦¦% 0
<
¦¦0 1
Claim
¦¦1 6
>
¦¦6 7
claims
¦¦8 >
)
¦¦> ?
{
§§ 	
var
¨¨ 
authSigningKey
¨¨ 
=
¨¨  
new
¨¨! $"
SymmetricSecurityKey
¨¨% 9
(
¨¨9 :
Encoding
¨¨: B
.
¨¨B C
UTF8
¨¨C G
.
¨¨G H
GetBytes
¨¨H P
(
¨¨P Q
configuration
¨¨Q ^
[
¨¨^ _
$str
¨¨_ k
]
¨¨k l
!
¨¨l m
)
¨¨m n
)
¨¨n o
;
¨¨o p
var
ªª 
tokenDescriptor
ªª 
=
ªª  !
new
ªª" %%
SecurityTokenDescriptor
ªª& =
{
«« 
Issuer
¬¬ 
=
¬¬ 
configuration
¬¬ &
[
¬¬& '
$str
¬¬' 8
]
¬¬8 9
!
¬¬9 :
,
¬¬: ;
Audience
­­ 
=
­­ 
configuration
­­ (
[
­­( )
$str
­­) <
]
­­< =
!
­­= >
,
­­> ?
Expires
®® 
=
®® 
DateTime
®® "
.
®®" #
UtcNow
®®# )
.
®®) *
AddHours
®®* 2
(
®®2 3
$num
®®3 4
)
®®4 5
,
®®5 6 
SigningCredentials
¯¯ "
=
¯¯# $
new
¯¯% ( 
SigningCredentials
¯¯) ;
(
¯¯; <
authSigningKey
¯¯< J
,
¯¯J K 
SecurityAlgorithms
¯¯L ^
.
¯¯^ _

HmacSha256
¯¯_ i
)
¯¯i j
,
¯¯j k
Subject
°° 
=
°° 
new
°° 
ClaimsIdentity
°° ,
(
°°, -
claims
°°- 3
)
°°3 4
}
±± 
;
±± 
var
³³ 
tokenHandler
³³ 
=
³³ 
new
³³ "%
JwtSecurityTokenHandler
³³# :
(
³³: ;
)
³³; <
;
³³< =
var
´´ 
token
´´ 
=
´´ 
tokenHandler
´´ $
.
´´$ %
CreateToken
´´% 0
(
´´0 1
tokenDescriptor
´´1 @
)
´´@ A
;
´´A B
return
µµ 
tokenHandler
µµ 
.
µµ  

WriteToken
µµ  *
(
µµ* +
token
µµ+ 0
)
µµ0 1
;
µµ1 2
}
¶¶ 	
}
·· 
}¸¸ ª"
;D:\Real-Estate\RealEstate.Identity\Services\EmailService.cs
	namespace 	

RealEstate
 
. 
Identity 
. 
Services &
{ 
public 

class 
EmailService 
: 
IEmailService  -
{ 
private 
readonly 
EmailConfiguration +
_emailConfig, 8
;8 9
public

 
EmailService

 
(

 
EmailConfiguration

 .
emailConfig

/ :
)

: ;
{ 	
_emailConfig 
= 
emailConfig &
;& '
} 	
public 
void 
	SendEmail 
( 
Message %
message& -
)- .
{ 	
var 
emailMessage 
= 
CreateEmailMessage 1
(1 2
message2 9
)9 :
;: ;
Send 
( 
emailMessage 
) 
; 
} 	
private 
MimeMessage 
CreateEmailMessage .
(. /
Message/ 6
message7 >
)> ?
{ 	
var 
emailMessage 
= 
new "
MimeMessage# .
(. /
)/ 0
;0 1
emailMessage 
. 
From 
. 
Add !
(! "
new" %
MailboxAddress& 4
(4 5
$str5 <
,< =
_emailConfig> J
.J K
FromK O
)O P
)P Q
;Q R
emailMessage 
. 
To 
. 
AddRange $
($ %
message% ,
., -
To- /
)/ 0
;0 1
emailMessage 
. 
Subject  
=! "
message# *
.* +
Subject+ 2
;2 3
emailMessage 
. 
Body 
= 
new  #
TextPart$ ,
(, -
MimeKit- 4
.4 5
Text5 9
.9 :

TextFormat: D
.D E
TextE I
)I J
{ 
Text 
= 
message 
. 
Content &
} 
; 
return 
emailMessage 
;  
}   	
private"" 
void"" 
Send"" 
("" 
MimeMessage"" %
mailMessage""& 1
)""1 2
{## 	
using$$ 
var$$ 
client$$ 
=$$ 
new$$ "
MailKit$$# *
.$$* +
Net$$+ .
.$$. /
Smtp$$/ 3
.$$3 4

SmtpClient$$4 >
($$> ?
)$$? @
;$$@ A
try%% 
{&& 
client'' 
.'' 
Connect'' 
('' 
_emailConfig'' +
.''+ ,

SmtpServer'', 6
,''6 7
_emailConfig''8 D
.''D E
Port''E I
,''I J
true''K O
)''O P
;''P Q
client(( 
.(( $
AuthenticationMechanisms(( /
.((/ 0
Remove((0 6
(((6 7
$str((7 @
)((@ A
;((A B
client)) 
.)) 
Authenticate)) #
())# $
_emailConfig))$ 0
.))0 1
Username))1 9
,))9 :
_emailConfig)); G
.))G H
Password))H P
)))P Q
;))Q R
client++ 
.++ 
Send++ 
(++ 
mailMessage++ '
)++' (
;++( )
},, 
catch-- 
(-- 
	Exception-- 
ex-- 
)--  
{.. 
throw// 
new// %
InvalidOperationException// 3
(//3 4
ex//4 6
.//6 7
Message//7 >
)//> ?
;//? @
}00 
finally11 
{22 
client33 
.33 

Disconnect33 !
(33! "
true33" &
)33& '
;33' (
client44 
.44 
Dispose44 
(44 
)44  
;44  !
}55 
}66 	
}77 
}88 ³
<D:\Real-Estate\RealEstate.Identity\Services\IEmailService.cs
	namespace 	

RealEstate
 
. 
Identity 
. 
Services &
{ 
public 

	interface 
IEmailService "
{ 
void 
	SendEmail 
( 
Message 
message &
)& '
;' (
} 
}		 