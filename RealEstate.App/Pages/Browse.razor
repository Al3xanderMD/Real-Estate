@page "/browse"
@using RealEstate.App.Data
@using RealEstate.App.Models
@using RealEstate.App.Operations.Fetch.Models
@using RealEstate.App.Operations.Fetch.Response
@using RealEstate.App.Tools

@inject FetchService fetchService
@inject ISessionStorageService sessionStorage

<head>
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />

    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    <link rel="stylesheet" href="css/styles.css?v=@MyTools.ver" />
</head>

<PageTitle>Browse Properties</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraLarge">
    <MudText Class="featured-title" Typo="Typo.h4">Browse Properties</MudText>

    <MudGrid Justify="Justify.SpaceEvenly">
        <div class="row">
            @if (loaded)
            {
                foreach (var post in posts)
                {
                    if (post != null)
                    {
                        <MudItem xs="12" sm="6" md="4" lg="3">
                            <MudLink Href="@($"{post.type}/post/{post.id}")" Style="text-decoration:none;">
                                <MudCard Class="browse-card" Elevation="1">
                                    <MudCardMedia Image="https://images.unsplash.com/photo-1592595896551-12b371d546d5?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D" /> @*replace with dynamic when implemented*@
                                    <MudCardContent>
                                        <MudText Typo="Typo.h5">@post.basePost.titlePost</MudText>
                                            <MudText Typo="Typo.body2"><MudIcon Icon="@Icons.Material.Filled.Euro" />@post.basePost.price</MudText>
                                            @* <MudText Typo="Typo.body2">This photo was taken in a small village in Istra Croatia.</MudText> *@
                                        </MudCardContent>
                                        <MudCardActions>
                                            <MudIconButton Icon="@Icons.Material.Filled.Favorite" Color="Color.Default" />
                                            <MudIconButton Icon="@Icons.Material.Filled.Share" Color="Color.Default" />
                                        </MudCardActions>
                                    </MudCard>
                                </MudLink>
                            </MudItem>
                    }
                }
            }
            
        </div>
    </MudGrid>

    <MudButton OnClick="fetchPosts" Disabled=noLoad>
        Load more posts
    </MudButton>


</MudContainer>

@code {
    private int step = 2;
    private int start_count = 7;
    private int end_count = 8;
    private bool noLoad = false;
    private bool loaded = false;
    List<PostResponseViewModel> posts;

    protected override async Task OnInitializedAsync()
    {
        if (await sessionStorage.ContainKeyAsync("posts"))
		{
			posts = await sessionStorage.GetItemAsync<List<PostResponseViewModel>>("posts");
            start_count = await sessionStorage.GetItemAsync<int>("start_count");
			end_count = await sessionStorage.GetItemAsync<int>("end_count");
            noLoad = await sessionStorage.GetItemAsync<bool>("noLoad");

			Console.WriteLine("posts found in session storage");
			loaded = true;
		}
		else
		{
            posts = await fetchService.FetchPostsAsync(start_count, end_count);

            if (posts != null)
            {
                Console.WriteLine("posts found");
                if (posts.Count != step)
                {
                    Console.WriteLine("NOLOAD");
                    noLoad = true;
                }
                else
                {
                    start_count = end_count + 1;
                    end_count = start_count + step - 1;
                }
            }
            else
            {
                Console.WriteLine("posts not found");
            }
		}

        loaded = true;
    }

    public async Task fetchPosts()
    {
        Console.WriteLine("fetching posts. . .");
        if (!noLoad)
        {
            List<PostResponseViewModel> newposts = await fetchService.FetchPostsAsync(start_count, end_count);

            if (newposts != null)
            {
                Console.WriteLine("posts found");
                if (newposts.Count != step)
                {
                    Console.WriteLine("NOLOAD");
                    noLoad = true;
                }
                else
                {
                    start_count = end_count+1;
                    end_count = start_count + step - 1;
                }

                posts.AddRange(newposts);
                await sessionStorage.SetItemAsync("posts", posts);
                await sessionStorage.SetItemAsync("start_count", start_count);
                await sessionStorage.SetItemAsync("end_count", end_count);
                await sessionStorage.SetItemAsync("noLoad", noLoad);
            }
            else
            {
                Console.WriteLine("posts not found");
            }
        } 
    }

    private List<PostModel> GetHardcodedProperties()
    {
        return new List<PostModel>
    {
         new PostModel
        {
            Title = "Cozy Cottage",
            Address = "123 Pine Street",
            Price = 250000,
            RoomCount = "3",
            MainImageUrl = "https://images.unsplash.com/photo-1592595896551-12b371d546d5?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
        },
        new PostModel
        {
            Title = "Modern Apartment",
            Address = "789 Elm Avenue",
            Price = 400000,
            RoomCount = "2",
            MainImageUrl = "https://images.unsplash.com/photo-1512917774080-9991f1c4c750?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
        },
        new PostModel
        {
            Title = "Spacious Villa",
            Address = "456 Oak Lane",
            Price = 700,
            RoomCount = "5",
            MainImageUrl = "https://images.unsplash.com/photo-1448630360428-65456885c650?q=80&w=2067&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
        },
         new PostModel
        {
            Title = "Bla1",
            Address = "123 Pine Street",
            Price = 250000,
            RoomCount = "3",
            MainImageUrl = "https://images.unsplash.com/photo-1580587771525-78b9dba3b914?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
        },
        new PostModel
        {
            Title = "Bla2",
            Address = "123 Pine Street",
            Price = 250000,
            RoomCount = "3",
            MainImageUrl = "https://images.unsplash.com/photo-1558036117-15d82a90b9b1?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
        },
        new PostModel
        {
            Title = "Bla3",
            Address = "789 Elm Avenue",
            Price = 400000,
            RoomCount = "2",
            MainImageUrl = "https://images.unsplash.com/photo-1494526585095-c41746248156?w=600&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MzB8fHJlYWwlMjBlc3RhdGV8ZW58MHx8MHx8fDA%3D"
        },
        new PostModel
        {
            Title = "Bla4",
            Address = "456 Oak Lane",
            Price = 700,
            RoomCount = "5",
            MainImageUrl = "https://images.unsplash.com/photo-1628624747186-a941c476b7ef?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
        },
         new PostModel
        {
            Title = "aaaaaaaaa",
            Address = "123 Pine Street",
            Price = 250000,
            RoomCount = "3",
            MainImageUrl = "https://images.unsplash.com/photo-1460317442991-0ec209397118?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
        },
        new PostModel
        {
            Title = "bbbbbbbbb",
            Address = "123 Pine Street",
            Price = 250000,
            RoomCount = "3",
            MainImageUrl = "https://images.unsplash.com/photo-1605146769289-440113cc3d00?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
        },
        new PostModel
        {
            Title = "ccccccccc",
            Address = "789 Elm Avenue",
            Price = 400000,
            RoomCount = "2",
            MainImageUrl = "https://images.unsplash.com/photo-1605276374104-dee2a0ed3cd6?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
        },
        new PostModel
        {
            Title = "dddddddd",
            Address = "456 Oak Lane",
            Price = 700,
            RoomCount = "5",
            MainImageUrl = "https://images.unsplash.com/photo-1523217582562-09d0def993a6?q=80&w=1780&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
        },
         new PostModel
        {
            Title = "eeeeeeeeeeee",
            Address = "123 Pine Street",
            Price = 250000,
            RoomCount = "3",
            MainImageUrl = "https://images.unsplash.com/photo-1628133287836-40bd5453bed1?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
        },
    };
    }

    // private List<PropertyInfo> GetHardcodedProperties()
    // {
    //     Replace this with your actual data retrieval logic or use hardcoded data
    //     return new List<PropertyInfo>
    //     {
    //         new PropertyInfo { Name = "House 1", Address = "123 Main St", Price = "$500,000", NumberOfRooms = 4, MainPhotoUrl = "path/to/photo1.jpg" },
    //         new PropertyInfo { Name = "Apartment 1", Address = "456 Oak Ave", Price = "$300,000", NumberOfRooms = 2, MainPhotoUrl = "path/to/photo2.jpg" },
    //         Add more properties as needed
    //     };
    // }
}