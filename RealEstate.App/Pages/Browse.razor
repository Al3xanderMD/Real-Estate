@page "/browse"
@using RealEstate.App.Data
@using RealEstate.App.Models

<head>
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />

    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    <link rel="stylesheet" href="css/styles.css" />
</head>

<PageTitle>Browse Properties</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraLarge">
    <MudText Typo="Typo.h4" Style="text-align:center;font-family:Arial, Helvetica, sans-serif; margin:5px">Find Properties</MudText>

    <MudStack Row="true" Spacing="3" Justify="Justify.SpaceEvenly" AlignItems="AlignItems.Center" Style="height:auto; border-radius:50px; overflow: hidden;">
        <div class="row">
            @foreach (var property in GetHardcodedProperties())
            {
                <div class="col-md-3" style="padding: 5px;">
                    <MudPaper Elevation="3" Class="pa-10 ma-2">
                        <div>
                            @* <MudImage Src="images/icon1.png" Alt="Propertunity Icon" Elevation="0" Width="64" Class="rounded-lg" /> *@
                            <img src="@property.MainImageUrl" alt="@property.Title" style="max-width: 100%; height: auto;" />
                        </div>
                        <MudText Typo="Typo.h6">@property.Title</MudText>
                            <MudText Typo="Typo.body2" Class="address-text" Style="font-family:Arial, Helvetica, sans-serif">@property.Address</MudText>
                            <MudText Typo="Typo.body2" Class="price-text" Style="color: #265073; font-family:Arial, Helvetica, sans-serif">Price: @property.Price</MudText>
                            <MudText Typo="Typo.body2" Class="room-count-text" Style="color: #2D9596; font-family:Arial, Helvetica, sans-serif">Rooms: @property.RoomCount</MudText>
                        </MudPaper>
                    </div>
            }
        </div>

    </MudStack>


</MudContainer>

@code {
    private List<PostModel> GetHardcodedProperties()
    {
        return new List<PostModel>
    {
        new PostModel
        {
            Title = "Cozy Cottage",
            Address = "123 Pine Street",
            Price = 250000,
            RoomCount = "3",
            MainImageUrl = "images/prop.png"
        },
        new PostModel
        {
            Title = "Modern Apartment",
            Address = "789 Elm Avenue",
            Price = 400000,
            RoomCount = "2",
            MainImageUrl = "images/prop.png"
        },
        new PostModel
        {
            Title = "Spacious Villa",
            Address = "456 Oak Lane",
            Price = 700,
            RoomCount = "5",
            MainImageUrl = "images/prop.png"
        },
         new PostModel
        {
            Title = "Cozy Cottage",
            Address = "123 Pine Street",
            Price = 250000,
            RoomCount = "3",
            MainImageUrl = "images/prop.png"
        },
        new PostModel
        {
            Title = "Modern Apartment",
            Address = "789 Elm Avenue",
            Price = 400000,
            RoomCount = "2",
            MainImageUrl = "images/prop.png"
        },
        new PostModel
        {
            Title = "Spacious Villa",
            Address = "456 Oak Lane",
            Price = 700,
            RoomCount = "5",
            MainImageUrl = "images/prop.png"
        },
         new PostModel
        {
            Title = "Cozy Cottage",
            Address = "123 Pine Street",
            Price = 250000,
            RoomCount = "3",
            MainImageUrl = "images/prop.png"
        },
        new PostModel
        {
            Title = "Modern Apartment",
            Address = "789 Elm Avenue",
            Price = 400000,
            RoomCount = "2",
            MainImageUrl = "images/prop.png"
        },
        new PostModel
        {
            Title = "Spacious Villa",
            Address = "456 Oak Lane",
            Price = 700,
            RoomCount = "5",
            MainImageUrl = "images/prop.png"
        },
    };
    }

    // private List<PropertyInfo> GetHardcodedProperties()
    // {
    //     Replace this with your actual data retrieval logic or use hardcoded data
    //     return new List<PropertyInfo>
    //     {
    //         new PropertyInfo { Name = "House 1", Address = "123 Main St", Price = "$500,000", NumberOfRooms = 4, MainPhotoUrl = "path/to/photo1.jpg" },
    //         new PropertyInfo { Name = "Apartment 1", Address = "456 Oak Ave", Price = "$300,000", NumberOfRooms = 2, MainPhotoUrl = "path/to/photo2.jpg" },
    //         Add more properties as needed
    //     };
    // }
}





 @* <h3>Available Properties</h3>

 <table class="table">
     <thead>
         <tr>
             <th>Name</th>
             <th>Address</th>
             <th>Price</th>
             <th>Number of Rooms</th>
         </tr>
     </thead>
      <tbody>
          @foreach (var property in Properties)
          {
             <tr>
                 <td>@property.Name</td>
                 <td>@property.Address</td>
                 <td>@property.Price.ToString("C")</td>
                 <td>@property.NumberOfRooms</td>
             </tr>
         }
     </tbody> 
 </table>

 @code {
     List<House> Properties { get; set; } = new List<Property>();

     protected override void OnInitialized()
     {
         Initialize Properties with sample data or fetch data from a service
         Properties = GetSampleProperties();
     }

     List<Property> GetSampleProperties()
     {
         Replace this with your actual data retrieval logic
         return new List<Property>
         {
             new Property { Name = "Property 1", Address = "123 Main St", Price = 250000, NumberOfRooms = 3 },
             new Property { Name = "Property 2", Address = "456 Elm St", Price = 300000, NumberOfRooms = 4 },
             Add more properties as needed
         };
     }
 } *@
