@page "/forgotpw"
@using FluentValidation
@using FluentValidation.Results
@using RealEstate.App.Auth
@using RealEstate.App.Models
@using RealEstate.App.Validators
@using RealEstate.App.Tools

@inject HttpClient Http
@inject IJSRuntime JSRuntime
@inject NavigationManager navigationManager
@inject CustomStateProvider authStateProvider
@inject IValidator<ForgotPasswordViewModel> Validator
@inject ISnackbar Snackbar

<head>
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />

    <link rel="stylesheet" href="css/styles.css?v=@MyTools.ver" />

    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
</head>
<DataLoader />
<PageTitle>Forgot Password</PageTitle>

<div class="content-container">
    <h6 class="warning-text">@message</h6>
    <div class="form-card">
        <div class="auth-form-buttons-div">
            <MudButton Variant="Variant.Text" Href="login">Sign in</MudButton>
        </div>
        <EditForm Model="@forgotPwRequest" OnValidSubmit="OnSubmit">
            <hr class="auth-hr">

            <div class="auth-input-div">
                <MudTextField Variant="Variant.Text" id="email"InputType="InputType.Email" @bind-Value="forgotPwRequest.Email" Label="Enter email"></MudTextField>

                <div class="error-msg auth-message">@emailError</div>
            </div>

            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Submit</MudButton>
            <hr class="auth-hr">
        </EditForm>
    </div>
</div>

@code {
    ForgotPasswordViewModel forgotPwRequest = new ForgotPasswordViewModel();
    string emailError { get; set; }
    string message { get; set; }

    async Task OnSubmit()
    {
        ValidationResult results = Validator.Validate(forgotPwRequest);
        emailError = null;

        if (!results.IsValid)
        {
            foreach (var failure in results.Errors)
            {
                if (failure.PropertyName == "Email")
                    emailError = failure.ErrorMessage;
            }
        }
        else
        {
            try
            {
                await authStateProvider.ForgotPassword(forgotPwRequest);
            }
            catch (Exception ex)
            {
                emailError = ex.Message;
                Snackbar.Add(ex.Message, MudBlazor.Severity.Error);
            }
            
            message = "Check your email for a link to reset your password. If it doesn’t appear within a few minutes, check your spam folder.";
        }
       
    }
}
