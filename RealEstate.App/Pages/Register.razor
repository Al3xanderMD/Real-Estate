@page "/register"
@using RealEstate.App.Objects
@using RealEstate.App.Validators
@using System.Net.Http.Json
@using System.Net.Http
@inject HttpClient Http
@inject HttpClient HttpClient

<head>
    <link rel="stylesheet" href="css/styles.css" />
</head>

<div class="content-container">
    <div class="auth-message"><p>@message</p></div>
    <div class="form-card">
        <div class="auth-form-buttons-div">
            <NavLink href="Login">
                <button class="auth-form-button">
                    Log In
                </button>
            </NavLink>

            <NavLink href="register">
                <button class="auth-form-button">
                    Sign up
                </button>
            </NavLink>
        </div>

        <EditForm Model="@emailModel" OnValidSubmit="HandleValidSubmit">
            <FluentValidationValidator />

            <hr class="auth-hr">

            <div class="auth-input-div">
                <label class="auth-label" for="email">Email:</label>

                <br>

                <InputText id="email" @bind-Value="emailModel.Email" type="email" class="auth-input" placeholder="Enter email" required />
                <ValidationMessage For="@(() => emailModel.Email)" />
            </div>

            <div class="auth-input-div">
                <label class="auth-label" for="username">Username:</label>

                <br>

                <InputText id="username" @bind-Value="emailModel.Username" type="name" class="auth-input" placeholder="Enter username" required />
                <ValidationMessage For="@(() => emailModel.Username)" />
            </div>

            <div class="auth-input-div">
                <label class="auth-label" for="phone">Phone:</label>

                <br>

                <InputText id="phone" @bind-Value="emailModel.Phone" type="phone" class="auth-input" placeholder="Enter phone number" required />
                <ValidationMessage For="@(() => emailModel.Username)" />
            </div>

            <div class="auth-input-div">
                <label class="auth-label" for="password">Password:</label>

                <br>

                <InputText id="password" @bind-Value="password" type="password" class="auth-input" placeholder="Create password" required />
            </div>

            <div class="auth-input-div">
                <label class="auth-label" for="confirmPassword">Confirm Password:</label>

                <br>

                <InputText id="confirmPassword" @bind-Value="confirmPassword" type="password" class="auth-input" placeholder="Confirm password" required />
            </div>

            <div class="password-suggestions">
                Must be at least 8 characters <br>
                At least 1 special character<br>
                Must contain letters and numbers<br>
                At least 1 lower and 1 uppercase letter<br>
            </div>

            <input class="auth-form-submit-button" type="submit" value="Submit" onclick="">
            <hr class="auth-hr">

            <div>By submitting I accept the terms of use</div>

        </EditForm>
    </div> 
</div>

@code {
        private EmailModel emailModel = new EmailModel();
        private string password;
        private string confirmPassword;
        public string message = "";
        private User user = new User();

    private async Task SubmitForm(User user)
    {
        var request = new HttpRequestMessage
            {
                Method = HttpMethod.Post,
                RequestUri = new Uri("https://localhost:7190/api/v1/Authentication/register"), // Update with your API endpoint
                Content = JsonContent.Create(user)
            };
        // Send a POST request to the API
        var response = await HttpClient.SendAsync(request);

        // Handle the API response if needed
        // For demonstration purposes, just print the response to the console
        Console.WriteLine(response);
    }

        private void HandleValidSubmit()
        {

            if (password == confirmPassword)
			{
                message="";
                user.Email = emailModel.Email;
                user.Username = emailModel.Username;
                user.Phone = emailModel.Phone;
                user.Password = password;
                SubmitForm(user);
			}
			else
			{
                message = "Passwords do not match";
			}
        }
}
